{
    "sourceFile": "app/(auth)/home.jsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 49,
            "patches": [
                {
                    "date": 1745760995534,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745762315554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n } from \"react-native\";\r\n import Feather from \"@expo/vector-icons/Feather\";\r\n import React, { useEffect, useState } from \"react\";\r\n import { Fontisto } from \"@expo/vector-icons\";\r\n-import { Colors } from \"../components/constants/Colors\";\r\n+import { Colors } from \"../constants/Colors\";\r\n import { LinearGradient } from \"expo-linear-gradient\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import Slider from \"@react-native-community/slider\";\r\n import { getAuth } from \"firebase/auth\";\r\n"
                },
                {
                    "date": 1745764332495,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,18 +467,9 @@\n \r\n         {/* Conținut în funcție de modul selectat */}\r\n         {pumpMode === \"manual\" && (\r\n           <View style={styles.pumpStatusContainer}>\r\n-            <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n+           \r\n \r\n             <View style={styles.pumpButtons}>\r\n             <TouchableOpacity\r\n                 style={[styles.pumpButton, styles.pumpOnButton]}\r\n"
                },
                {
                    "date": 1745764342116,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,10 +467,9 @@\n \r\n         {/* Conținut în funcție de modul selectat */}\r\n         {pumpMode === \"manual\" && (\r\n           <View style={styles.pumpStatusContainer}>\r\n-           \r\n-\r\n+        \r\n             <View style={styles.pumpButtons}>\r\n             <TouchableOpacity\r\n                 style={[styles.pumpButton, styles.pumpOnButton]}\r\n                 onPress={handlePumpStart}\r\n"
                },
                {
                    "date": 1745764359364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,9 +347,18 @@\n             style={styles.logo}\r\n           />\r\n         </View>\r\n       </LinearGradient>\r\n-\r\n+      <View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n         {/* Moisture Card */}\r\n         <View style={[styles.card, styles.moistureCard]}>\r\n"
                },
                {
                    "date": 1745764383571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,18 +347,9 @@\n             style={styles.logo}\r\n           />\r\n         </View>\r\n       </LinearGradient>\r\n-      <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n+    \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n         {/* Moisture Card */}\r\n         <View style={[styles.card, styles.moistureCard]}>\r\n"
                },
                {
                    "date": 1745764390646,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,8 +350,9 @@\n       </LinearGradient>\r\n     \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n+        \r\n         {/* Moisture Card */}\r\n         <View style={[styles.card, styles.moistureCard]}>\r\n           <View style={styles.cardIcon}>\r\n             <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n"
                },
                {
                    "date": 1745764397579,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -381,9 +381,18 @@\n                 }`\r\n               : \"--\"}\r\n           </Text>\r\n         </View>\r\n-        \r\n+        <View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n       </View>\r\n       <TouchableOpacity\r\n             onPress={handleRefresh}\r\n             style={styles.refreshButton}\r\n"
                },
                {
                    "date": 1745764409234,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -381,20 +381,21 @@\n                 }`\r\n               : \"--\"}\r\n           </Text>\r\n         </View>\r\n+        \r\n+      </View>\r\n+      <TouchableOpacity\r\n         <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n+        style={[\r\n+          styles.pumpStatusIndicator,\r\n+          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+        ]}\r\n+      >\r\n+        <Text style={styles.pumpStatusText}>\r\n+          {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+        </Text>\r\n       </View>\r\n-      <TouchableOpacity\r\n             onPress={handleRefresh}\r\n             style={styles.refreshButton}\r\n           >\r\n             <Text style={styles.refreshText}>\r\n"
                },
                {
                    "date": 1745764427076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,9 +347,18 @@\n             style={styles.logo}\r\n           />\r\n         </View>\r\n       </LinearGradient>\r\n-    \r\n+      <View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n         \r\n         {/* Moisture Card */}\r\n@@ -384,18 +393,8 @@\n         </View>\r\n         \r\n       </View>\r\n       <TouchableOpacity\r\n-        <View\r\n-        style={[\r\n-          styles.pumpStatusIndicator,\r\n-          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-        ]}\r\n-      >\r\n-        <Text style={styles.pumpStatusText}>\r\n-          {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-        </Text>\r\n-      </View>\r\n             onPress={handleRefresh}\r\n             style={styles.refreshButton}\r\n           >\r\n             <Text style={styles.refreshText}>\r\n"
                },
                {
                    "date": 1745764449098,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -347,18 +347,9 @@\n             style={styles.logo}\r\n           />\r\n         </View>\r\n       </LinearGradient>\r\n-      <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n+    \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n         \r\n         {/* Moisture Card */}\r\n"
                },
                {
                    "date": 1745764459427,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -350,9 +350,18 @@\n       </LinearGradient>\r\n     \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n-        \r\n+      <View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n         {/* Moisture Card */}\r\n         <View style={[styles.card, styles.moistureCard]}>\r\n           <View style={styles.cardIcon}>\r\n             <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n"
                },
                {
                    "date": 1745764565934,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,25 +329,97 @@\n       <LinearGradient\r\n         colors={[Colors.DARKGREEN, Colors.WHITEGREEN]}\r\n         style={styles.header}\r\n       >\r\n-        <View style={styles.headerContent}>\r\n-          <View style={styles.userInfo}>\r\n-            {/* <Image\r\n-        source={{ uri: user?.imageUrl }}\r\n-        style={styles.userImage}\r\n-      /> */}\r\n-            <View>\r\n-              <Text style={styles.welcomeText}>Welcome back,</Text>\r\n-              <Text style={styles.userName}>{username} 🎉</Text>\r\n-            </View>\r\n-          </View>\r\n-          {/* Adaugă logo-ul în partea dreaptă */}\r\n-          <Image\r\n-            source={require(\"../../assets/icons/logo.png\")} // sau {uri: 'https://...'} pentru URL\r\n-            style={styles.logo}\r\n+         <View style={styles.headerContent}>\r\n+      <View style={styles.userInfo}>\r\n+        <View>\r\n+          <Text style={styles.welcomeText}>Welcome back,</Text>\r\n+          <Text style={styles.userName}>{username} 🎉</Text>\r\n+        </View>\r\n+      </View>\r\n+      <Image\r\n+        source={require(\"../../assets/icons/logo.png\")}\r\n+        style={styles.logo}\r\n+      />\r\n+    </View>\r\n+  </LinearGradient>\r\n+\r\n+  {/* Dashboard Cards - Top Row */}\r\n+  <View style={styles.topRow}>\r\n+    {/* Pump Status Card */}\r\n+    <View style={[styles.card, styles.pumpCard]}>\r\n+      <View style={styles.cardHeader}>\r\n+        <MaterialCommunityIcons \r\n+          name=\"water-pump\" \r\n+          size={24} \r\n+          color={pumpStatus === \"on\" ? Colors.GREEN : Colors.RED} \r\n+        />\r\n+        <Text style={styles.cardLabel}>Stare Pompă</Text>\r\n+      </View>\r\n+      <View style={styles.pumpStatusContainer}>\r\n+        <View style={[\r\n+          styles.pumpStatusIndicator,\r\n+          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+        ]}>\r\n+          <Text style={styles.pumpStatusText}>\r\n+            {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+          </Text>\r\n+        </View>\r\n+      </View>\r\n+      <Text style={styles.pumpStatusSubtext}>\r\n+        {pumpStatus === \"on\" ? \"Pompa funcționează\" : \"Pompa este oprită\"}\r\n+      </Text>\r\n+    </View>\r\n+\r\n+    {/* Temperature Card */}\r\n+    <View style={[styles.card, styles.tempCard]}>\r\n+      <View style={styles.cardHeader}>\r\n+        <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n+        <Text style={styles.cardLabel}>Temperatură</Text>\r\n+      </View>\r\n+      <Text style={styles.cardValue}>\r\n+        {temperature !== null\r\n+          ? `${parseFloat(temperature) % 1 === 0\r\n+              ? temperature + \"°C\"\r\n+              : Number(temperature).toFixed(1) + \"°C\"}`\r\n+          : \"--\"}\r\n+      </Text>\r\n+      <Text style={styles.cardSubtext}>\r\n+        {temperature > 30 ? \"Cald\" : temperature > 20 ? \"Moderat\" : \"Răcoros\"}\r\n+      </Text>\r\n+    </View>\r\n+  </View>\r\n+\r\n+  {/* Moisture Card - Full Width */}\r\n+  <View style={[styles.card, styles.moistureCard]}>\r\n+    <View style={styles.cardHeader}>\r\n+      <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n+      <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n+    </View>\r\n+    <View style={styles.moistureContent}>\r\n+      <Text style={styles.moistureValue}>\r\n+        {moisture !== null ? `${moisture}%` : \"--\"}\r\n+      </Text>\r\n+      <View style={styles.moistureIndicatorContainer}>\r\n+        <View style={styles.moistureIndicatorBackground}>\r\n+          <View \r\n+            style={[\r\n+              styles.moistureIndicatorFill,\r\n+              {width: `${moisture}%`}\r\n+            ]}\r\n           />\r\n         </View>\r\n+        <Text style={styles.moistureStatus}>\r\n+          {moisture > 60 \r\n+            ? \"Optimă\" \r\n+            : moisture > 30 \r\n+              ? \"Uscat\" \r\n+              : \"Foarte uscat\"}\r\n+        </Text>\r\n+      </View>\r\n+    </View>\r\n+  </View>\r\n       </LinearGradient>\r\n     \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n"
                },
                {
                    "date": 1745764586640,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -329,97 +329,25 @@\n       <LinearGradient\r\n         colors={[Colors.DARKGREEN, Colors.WHITEGREEN]}\r\n         style={styles.header}\r\n       >\r\n-         <View style={styles.headerContent}>\r\n-      <View style={styles.userInfo}>\r\n-        <View>\r\n-          <Text style={styles.welcomeText}>Welcome back,</Text>\r\n-          <Text style={styles.userName}>{username} 🎉</Text>\r\n-        </View>\r\n-      </View>\r\n-      <Image\r\n-        source={require(\"../../assets/icons/logo.png\")}\r\n-        style={styles.logo}\r\n-      />\r\n-    </View>\r\n-  </LinearGradient>\r\n-\r\n-  {/* Dashboard Cards - Top Row */}\r\n-  <View style={styles.topRow}>\r\n-    {/* Pump Status Card */}\r\n-    <View style={[styles.card, styles.pumpCard]}>\r\n-      <View style={styles.cardHeader}>\r\n-        <MaterialCommunityIcons \r\n-          name=\"water-pump\" \r\n-          size={24} \r\n-          color={pumpStatus === \"on\" ? Colors.GREEN : Colors.RED} \r\n-        />\r\n-        <Text style={styles.cardLabel}>Stare Pompă</Text>\r\n-      </View>\r\n-      <View style={styles.pumpStatusContainer}>\r\n-        <View style={[\r\n-          styles.pumpStatusIndicator,\r\n-          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-        ]}>\r\n-          <Text style={styles.pumpStatusText}>\r\n-            {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n-          </Text>\r\n-        </View>\r\n-      </View>\r\n-      <Text style={styles.pumpStatusSubtext}>\r\n-        {pumpStatus === \"on\" ? \"Pompa funcționează\" : \"Pompa este oprită\"}\r\n-      </Text>\r\n-    </View>\r\n-\r\n-    {/* Temperature Card */}\r\n-    <View style={[styles.card, styles.tempCard]}>\r\n-      <View style={styles.cardHeader}>\r\n-        <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n-        <Text style={styles.cardLabel}>Temperatură</Text>\r\n-      </View>\r\n-      <Text style={styles.cardValue}>\r\n-        {temperature !== null\r\n-          ? `${parseFloat(temperature) % 1 === 0\r\n-              ? temperature + \"°C\"\r\n-              : Number(temperature).toFixed(1) + \"°C\"}`\r\n-          : \"--\"}\r\n-      </Text>\r\n-      <Text style={styles.cardSubtext}>\r\n-        {temperature > 30 ? \"Cald\" : temperature > 20 ? \"Moderat\" : \"Răcoros\"}\r\n-      </Text>\r\n-    </View>\r\n-  </View>\r\n-\r\n-  {/* Moisture Card - Full Width */}\r\n-  <View style={[styles.card, styles.moistureCard]}>\r\n-    <View style={styles.cardHeader}>\r\n-      <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n-      <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n-    </View>\r\n-    <View style={styles.moistureContent}>\r\n-      <Text style={styles.moistureValue}>\r\n-        {moisture !== null ? `${moisture}%` : \"--\"}\r\n-      </Text>\r\n-      <View style={styles.moistureIndicatorContainer}>\r\n-        <View style={styles.moistureIndicatorBackground}>\r\n-          <View \r\n-            style={[\r\n-              styles.moistureIndicatorFill,\r\n-              {width: `${moisture}%`}\r\n-            ]}\r\n+        <View style={styles.headerContent}>\r\n+          <View style={styles.userInfo}>\r\n+            {/* <Image\r\n+        source={{ uri: user?.imageUrl }}\r\n+        style={styles.userImage}\r\n+      /> */}\r\n+            <View>\r\n+              <Text style={styles.welcomeText}>Welcome back,</Text>\r\n+              <Text style={styles.userName}>{username} 🎉</Text>\r\n+            </View>\r\n+          </View>\r\n+          {/* Adaugă logo-ul în partea dreaptă */}\r\n+          <Image\r\n+            source={require(\"../../assets/icons/logo.png\")} // sau {uri: 'https://...'} pentru URL\r\n+            style={styles.logo}\r\n           />\r\n         </View>\r\n-        <Text style={styles.moistureStatus}>\r\n-          {moisture > 60 \r\n-            ? \"Optimă\" \r\n-            : moisture > 30 \r\n-              ? \"Uscat\" \r\n-              : \"Foarte uscat\"}\r\n-        </Text>\r\n-      </View>\r\n-    </View>\r\n-  </View>\r\n       </LinearGradient>\r\n     \r\n       {/* Dashboard Cards */}\r\n       <View style={styles.cardsContainer}>\r\n"
                },
                {
                    "date": 1745764615151,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -349,51 +349,82 @@\n         </View>\r\n       </LinearGradient>\r\n     \r\n       {/* Dashboard Cards */}\r\n-      <View style={styles.cardsContainer}>\r\n-      <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n-        {/* Moisture Card */}\r\n-        <View style={[styles.card, styles.moistureCard]}>\r\n-          <View style={styles.cardIcon}>\r\n-            <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n-          </View>\r\n-          <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n-          <Text style={styles.cardValue}>\r\n-            {moisture !== null ? `${moisture}%` : \"--\"}\r\n+      <View style={styles.topRow}>\r\n+    {/* Pump Status Card */}\r\n+    <View style={[styles.card, styles.pumpCard]}>\r\n+      <View style={styles.cardHeader}>\r\n+        <MaterialCommunityIcons \r\n+          name=\"water-pump\" \r\n+          size={24} \r\n+          color={pumpStatus === \"on\" ? Colors.GREEN : Colors.RED} \r\n+        />\r\n+        <Text style={styles.cardLabel}>Stare Pompă</Text>\r\n+      </View>\r\n+      <View style={styles.pumpStatusContainer}>\r\n+        <View style={[\r\n+          styles.pumpStatusIndicator,\r\n+          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+        ]}>\r\n+          <Text style={styles.pumpStatusText}>\r\n+            {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n           </Text>\r\n-          <Text style={styles.cardStatus}>\r\n-            {moisture > 60 ? \"Optim\" : moisture > 30 ? \"Uscat\" : \"Foarte uscat\"}\r\n-          </Text>\r\n         </View>\r\n+      </View>\r\n+      <Text style={styles.pumpStatusSubtext}>\r\n+        {pumpStatus === \"on\" ? \"Pompa funcționează\" : \"Pompa este oprită\"}\r\n+      </Text>\r\n+    </View>\r\n \r\n-        {/* Temperature Card */}\r\n-        <View style={[styles.card, styles.tempCard]}>\r\n-          <View style={styles.cardIcon}>\r\n-            <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n-          </View>\r\n-          <Text style={styles.cardLabel}>Temperatură</Text>\r\n-          <Text style={styles.cardValue}>\r\n-            {temperature !== null\r\n-              ? `${\r\n-                  parseFloat(temperature) % 1 === 0\r\n-                    ? temperature + \"°C\"\r\n-                    : Number(temperature).toFixed(2) + \"°C\"\r\n-                }`\r\n-              : \"--\"}\r\n-          </Text>\r\n+    {/* Temperature Card */}\r\n+    <View style={[styles.card, styles.tempCard]}>\r\n+      <View style={styles.cardHeader}>\r\n+        <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n+        <Text style={styles.cardLabel}>Temperatură</Text>\r\n+      </View>\r\n+      <Text style={styles.cardValue}>\r\n+        {temperature !== null\r\n+          ? `${parseFloat(temperature) % 1 === 0\r\n+              ? temperature + \"°C\"\r\n+              : Number(temperature).toFixed(1) + \"°C\"}`\r\n+          : \"--\"}\r\n+      </Text>\r\n+      <Text style={styles.cardSubtext}>\r\n+        {temperature > 30 ? \"Cald\" : temperature > 20 ? \"Moderat\" : \"Răcoros\"}\r\n+      </Text>\r\n+    </View>\r\n+  </View>\r\n+\r\n+  {/* Moisture Card - Full Width */}\r\n+  <View style={[styles.card, styles.moistureCard]}>\r\n+    <View style={styles.cardHeader}>\r\n+      <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n+      <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n+    </View>\r\n+    <View style={styles.moistureContent}>\r\n+      <Text style={styles.moistureValue}>\r\n+        {moisture !== null ? `${moisture}%` : \"--\"}\r\n+      </Text>\r\n+      <View style={styles.moistureIndicatorContainer}>\r\n+        <View style={styles.moistureIndicatorBackground}>\r\n+          <View \r\n+            style={[\r\n+              styles.moistureIndicatorFill,\r\n+              {width: `${moisture}%`}\r\n+            ]}\r\n+          />\r\n         </View>\r\n-        \r\n+        <Text style={styles.moistureStatus}>\r\n+          {moisture > 60 \r\n+            ? \"Optimă\" \r\n+            : moisture > 30 \r\n+              ? \"Uscat\" \r\n+              : \"Foarte uscat\"}\r\n+        </Text>\r\n       </View>\r\n+    </View>\r\n+  </View> \r\n       <TouchableOpacity\r\n             onPress={handleRefresh}\r\n             style={styles.refreshButton}\r\n           >\r\n"
                },
                {
                    "date": 1745764636411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -748,10 +748,153 @@\n \r\n export default Home;\r\n \r\n const styles = StyleSheet.create({\r\n+\r\n+\r\n   container: {\r\n     flex: 1,\r\n+    backgroundColor: Colors.PRIMARY,\r\n+  },\r\n+  header: {\r\n+    padding: 20,\r\n+    paddingTop: 50,\r\n+    borderBottomLeftRadius: 20,\r\n+    borderBottomRightRadius: 20,\r\n+  },\r\n+  headerContent: {\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-between',\r\n+    alignItems: 'center',\r\n+  },\r\n+  userInfo: {\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+  },\r\n+  welcomeText: {\r\n+    fontFamily: 'poppins',\r\n+    fontSize: 16,\r\n+    color: Colors.WHITE,\r\n+  },\r\n+  userName: {\r\n+    fontFamily: 'poppins-bold',\r\n+    fontSize: 20,\r\n+    color: Colors.WHITE,\r\n+  },\r\n+  logo: {\r\n+    width: 50,\r\n+    height: 50,\r\n+    resizeMode: 'contain',\r\n+  },\r\n+  topRow: {\r\n+    flexDirection: 'row',\r\n+    justifyContent: 'space-between',\r\n+    paddingHorizontal: 15,\r\n+    marginTop: 20,\r\n+  },\r\n+  card: {\r\n+    borderRadius: 15,\r\n+    padding: 20,\r\n+    marginBottom: 15,\r\n+    shadowColor: '#000',\r\n+    shadowOffset: { width: 0, height: 2 },\r\n+    shadowOpacity: 0.1,\r\n+    shadowRadius: 6,\r\n+    elevation: 3,\r\n+    backgroundColor: Colors.WHITE,\r\n+  },\r\n+  pumpCard: {\r\n+    width: '48%',\r\n+  },\r\n+  tempCard: {\r\n+    width: '48%',\r\n+  },\r\n+  moistureCard: {\r\n+    marginHorizontal: 15,\r\n+  },\r\n+  cardHeader: {\r\n+    flexDirection: 'row',\r\n+    alignItems: 'center',\r\n+    marginBottom: 10,\r\n+  },\r\n+  cardLabel: {\r\n+    fontFamily: 'poppins-semibold',\r\n+    fontSize: 16,\r\n+    marginLeft: 10,\r\n+    color: Colors.DARKGREEN,\r\n+  },\r\n+  cardValue: {\r\n+    fontFamily: 'poppins-bold',\r\n+    fontSize: 28,\r\n+    color: Colors.DARK,\r\n+    marginVertical: 5,\r\n+  },\r\n+  pumpStatusContainer: {\r\n+    alignItems: 'center',\r\n+    marginVertical: 10,\r\n+  },\r\n+  pumpStatusIndicator: {\r\n+    paddingVertical: 8,\r\n+    paddingHorizontal: 15,\r\n+    borderRadius: 20,\r\n+    alignItems: 'center',\r\n+    justifyContent: 'center',\r\n+  },\r\n+  pumpOn: {\r\n+    backgroundColor: Colors.LIGHTGREEN,\r\n+  },\r\n+  pumpOff: {\r\n+    backgroundColor: Colors.LIGHTRED,\r\n+  },\r\n+  pumpStatusText: {\r\n+    fontFamily: 'poppins-bold',\r\n+    fontSize: 14,\r\n+    color: Colors.WHITE,\r\n+  },\r\n+  pumpStatusSubtext: {\r\n+    fontFamily: 'poppins',\r\n+    fontSize: 12,\r\n+    color: Colors.DARKGRAY,\r\n+    textAlign: 'center',\r\n+  },\r\n+  cardSubtext: {\r\n+    fontFamily: 'poppins',\r\n+    fontSize: 14,\r\n+    color: Colors.DARKGRAY,\r\n+  },\r\n+  moistureContent: {\r\n+    alignItems: 'center',\r\n+  },\r\n+  moistureValue: {\r\n+    fontFamily: 'poppins-bold',\r\n+    fontSize: 32,\r\n+    color: Colors.BLUE,\r\n+    marginBottom: 10,\r\n+  },\r\n+  moistureIndicatorContainer: {\r\n+    width: '100%',\r\n+    alignItems: 'center',\r\n+  },\r\n+  moistureIndicatorBackground: {\r\n+    height: 10,\r\n+    width: '100%',\r\n+    backgroundColor: Colors.LIGHTGRAY,\r\n+    borderRadius: 5,\r\n+    overflow: 'hidden',\r\n+    marginBottom: 5,\r\n+  },\r\n+  moistureIndicatorFill: {\r\n+    height: '100%',\r\n+    backgroundColor: Colors.BLUE,\r\n+    borderRadius: 5,\r\n+  },\r\n+  moistureStatus: {\r\n+    fontFamily: 'poppins-semibold',\r\n+    fontSize: 14,\r\n+    color: Colors.DARK,\r\n+  },\r\n+  container: {\r\n+    flex: 1,\r\n     backgroundColor: \"#f5f5f5\",\r\n   },\r\n   header: {\r\n     padding: 25,\r\n"
                },
                {
                    "date": 1745764658449,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1041,13 +1041,9 @@\n   },\r\n   pumpOff: {\r\n     backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n   },\r\n-  pumpStatusText: {\r\n-    fontFamily: \"poppins-bold\",\r\n-    fontSize: 14,\r\n-    color: \"#333\",\r\n-  },\r\n+\r\n   pumpButtons: {\r\n     flexDirection: \"row\",\r\n     gap: 10,\r\n   },\r\n"
                },
                {
                    "date": 1745764667955,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1038,12 +1038,10 @@\n   },\r\n   pumpOn: {\r\n     backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n   },\r\n-  pumpOff: {\r\n-    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n-  },\r\n \r\n+\r\n   pumpButtons: {\r\n     flexDirection: \"row\",\r\n     gap: 10,\r\n   },\r\n"
                },
                {
                    "date": 1745764680216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -838,11 +838,9 @@\n     borderRadius: 20,\r\n     alignItems: 'center',\r\n     justifyContent: 'center',\r\n   },\r\n-  pumpOn: {\r\n-    backgroundColor: Colors.LIGHTGREEN,\r\n-  },\r\n+ \r\n   pumpOff: {\r\n     backgroundColor: Colors.LIGHTRED,\r\n   },\r\n   pumpStatusText: {\r\n@@ -1028,15 +1026,9 @@\n     flexDirection: \"row\",\r\n     alignItems: \"center\",\r\n     justifyContent: \"space-between\",\r\n   },\r\n-  pumpStatusIndicator: {\r\n-    paddingVertical: 8,\r\n-    paddingHorizontal: 15,\r\n-    borderRadius: 20,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n-  },\r\n+\r\n   pumpOn: {\r\n     backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n   },\r\n \r\n"
                },
                {
                    "date": 1745764694325,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1021,14 +1021,10 @@\n     fontSize: 18,\r\n     color: \"#333\",\r\n     marginBottom: 15,\r\n   },\r\n-  pumpStatusContainer: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    justifyContent: \"space-between\",\r\n-  },\r\n \r\n+\r\n   pumpOn: {\r\n     backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n   },\r\n \r\n"
                },
                {
                    "date": 1745764701809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -992,14 +992,9 @@\n     color: \"#666\",\r\n     fontSize: 14,\r\n     marginBottom: 5,\r\n   },\r\n-  cardValue: {\r\n-    fontFamily: \"poppins-bold\",\r\n-    fontSize: 24,\r\n-    color: \"#333\",\r\n-    marginBottom: 5,\r\n-  },\r\n+\r\n   cardStatus: {\r\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n"
                },
                {
                    "date": 1745764708378,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -986,15 +986,10 @@\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n     marginBottom: 10,\r\n   },\r\n-  cardLabel: {\r\n-    fontFamily: \"poppins\",\r\n-    color: \"#666\",\r\n-    fontSize: 14,\r\n-    marginBottom: 5,\r\n-  },\r\n \r\n+\r\n   cardStatus: {\r\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n"
                },
                {
                    "date": 1745764717336,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -967,13 +967,13 @@\n     shadowOpacity: 0.1,\r\n     shadowRadius: 6,\r\n     elevation: 3,\r\n   },\r\n-  moistureCard: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderLeftWidth: 5,\r\n-    borderLeftColor: \"#4a90e2\",\r\n-  },\r\n+  // moistureCard: {\r\n+  //   backgroundColor: \"#fff\",\r\n+  //   borderLeftWidth: 5,\r\n+  //   borderLeftColor: \"#4a90e2\",\r\n+  // },\r\n   tempCard: {\r\n     backgroundColor: \"#fff\",\r\n     borderLeftWidth: 5,\r\n     borderLeftColor: \"#e74c3c\",\r\n"
                },
                {
                    "date": 1745764727608,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -972,13 +972,13 @@\n   //   backgroundColor: \"#fff\",\r\n   //   borderLeftWidth: 5,\r\n   //   borderLeftColor: \"#4a90e2\",\r\n   // },\r\n-  tempCard: {\r\n-    backgroundColor: \"#fff\",\r\n-    borderLeftWidth: 5,\r\n-    borderLeftColor: \"#e74c3c\",\r\n-  },\r\n+  // tempCard: {\r\n+  //   backgroundColor: \"#fff\",\r\n+  //   borderLeftWidth: 5,\r\n+  //   borderLeftColor: \"#e74c3c\",\r\n+  // },\r\n   cardIcon: {\r\n     backgroundColor: \"rgba(74, 144, 226, 0.1)\",\r\n     width: 40,\r\n     height: 40,\r\n"
                },
                {
                    "date": 1745764768278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Ionicons } from \"@expo/vector-icons\";\r\n-import { getDatabase, onValue, update } from \"firebase/database\";\r\n+import { getDatabase, onValue, update } from \"firebase/database\";import { MaterialCommunityIcons } from '@expo/vector-icons';\r\n import { saveToRealtimeDatabase, setupRealtimeListener } from '../../functions/firebase';\r\n import { useAuth } from \"../../functions\";\r\n import {\r\n   View,\r\n"
                },
                {
                    "date": 1745764778444,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import { Ionicons } from \"@expo/vector-icons\";\r\n-import { getDatabase, onValue, update } from \"firebase/database\";import { MaterialCommunityIcons } from '@expo/vector-icons';\r\n+import { getDatabase, onValue, update } from \"firebase/database\";\r\n import { saveToRealtimeDatabase, setupRealtimeListener } from '../../functions/firebase';\r\n import { useAuth } from \"../../functions\";\r\n import {\r\n   View,\r\n@@ -14,9 +14,9 @@\n } from \"react-native\";\r\n import Feather from \"@expo/vector-icons/Feather\";\r\n import React, { useEffect, useState } from \"react\";\r\n import { Fontisto } from \"@expo/vector-icons\";\r\n-import { Colors } from \"../constants/Colors\";\r\n+import { Colors } from \"../../constants/Colors\";\r\n import { LinearGradient } from \"expo-linear-gradient\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import Slider from \"@react-native-community/slider\";\r\n import { getAuth } from \"firebase/auth\";\r\n@@ -347,84 +347,43 @@\n             style={styles.logo}\r\n           />\r\n         </View>\r\n       </LinearGradient>\r\n-    \r\n+\r\n       {/* Dashboard Cards */}\r\n-      <View style={styles.topRow}>\r\n-    {/* Pump Status Card */}\r\n-    <View style={[styles.card, styles.pumpCard]}>\r\n-      <View style={styles.cardHeader}>\r\n-        <MaterialCommunityIcons \r\n-          name=\"water-pump\" \r\n-          size={24} \r\n-          color={pumpStatus === \"on\" ? Colors.GREEN : Colors.RED} \r\n-        />\r\n-        <Text style={styles.cardLabel}>Stare Pompă</Text>\r\n-      </View>\r\n-      <View style={styles.pumpStatusContainer}>\r\n-        <View style={[\r\n-          styles.pumpStatusIndicator,\r\n-          pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-        ]}>\r\n-          <Text style={styles.pumpStatusText}>\r\n-            {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+      <View style={styles.cardsContainer}>\r\n+        {/* Moisture Card */}\r\n+        <View style={[styles.card, styles.moistureCard]}>\r\n+          <View style={styles.cardIcon}>\r\n+            <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n+          </View>\r\n+          <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n+          <Text style={styles.cardValue}>\r\n+            {moisture !== null ? `${moisture}%` : \"--\"}\r\n           </Text>\r\n+          <Text style={styles.cardStatus}>\r\n+            {moisture > 60 ? \"Optim\" : moisture > 30 ? \"Uscat\" : \"Foarte uscat\"}\r\n+          </Text>\r\n         </View>\r\n-      </View>\r\n-      <Text style={styles.pumpStatusSubtext}>\r\n-        {pumpStatus === \"on\" ? \"Pompa funcționează\" : \"Pompa este oprită\"}\r\n-      </Text>\r\n-    </View>\r\n \r\n-    {/* Temperature Card */}\r\n-    <View style={[styles.card, styles.tempCard]}>\r\n-      <View style={styles.cardHeader}>\r\n-        <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n-        <Text style={styles.cardLabel}>Temperatură</Text>\r\n-      </View>\r\n-      <Text style={styles.cardValue}>\r\n-        {temperature !== null\r\n-          ? `${parseFloat(temperature) % 1 === 0\r\n-              ? temperature + \"°C\"\r\n-              : Number(temperature).toFixed(1) + \"°C\"}`\r\n-          : \"--\"}\r\n-      </Text>\r\n-      <Text style={styles.cardSubtext}>\r\n-        {temperature > 30 ? \"Cald\" : temperature > 20 ? \"Moderat\" : \"Răcoros\"}\r\n-      </Text>\r\n-    </View>\r\n-  </View>\r\n-\r\n-  {/* Moisture Card - Full Width */}\r\n-  <View style={[styles.card, styles.moistureCard]}>\r\n-    <View style={styles.cardHeader}>\r\n-      <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n-      <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n-    </View>\r\n-    <View style={styles.moistureContent}>\r\n-      <Text style={styles.moistureValue}>\r\n-        {moisture !== null ? `${moisture}%` : \"--\"}\r\n-      </Text>\r\n-      <View style={styles.moistureIndicatorContainer}>\r\n-        <View style={styles.moistureIndicatorBackground}>\r\n-          <View \r\n-            style={[\r\n-              styles.moistureIndicatorFill,\r\n-              {width: `${moisture}%`}\r\n-            ]}\r\n-          />\r\n+        {/* Temperature Card */}\r\n+        <View style={[styles.card, styles.tempCard]}>\r\n+          <View style={styles.cardIcon}>\r\n+            <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n+          </View>\r\n+          <Text style={styles.cardLabel}>Temperatură</Text>\r\n+          <Text style={styles.cardValue}>\r\n+            {temperature !== null\r\n+              ? `${\r\n+                  parseFloat(temperature) % 1 === 0\r\n+                    ? temperature + \"°C\"\r\n+                    : Number(temperature).toFixed(2) + \"°C\"\r\n+                }`\r\n+              : \"--\"}\r\n+          </Text>\r\n         </View>\r\n-        <Text style={styles.moistureStatus}>\r\n-          {moisture > 60 \r\n-            ? \"Optimă\" \r\n-            : moisture > 30 \r\n-              ? \"Uscat\" \r\n-              : \"Foarte uscat\"}\r\n-        </Text>\r\n+        \r\n       </View>\r\n-    </View>\r\n-  </View> \r\n       <TouchableOpacity\r\n             onPress={handleRefresh}\r\n             style={styles.refreshButton}\r\n           >\r\n@@ -508,9 +467,19 @@\n \r\n         {/* Conținut în funcție de modul selectat */}\r\n         {pumpMode === \"manual\" && (\r\n           <View style={styles.pumpStatusContainer}>\r\n-        \r\n+            <View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n+\r\n             <View style={styles.pumpButtons}>\r\n             <TouchableOpacity\r\n                 style={[styles.pumpButton, styles.pumpOnButton]}\r\n                 onPress={handlePumpStart}\r\n@@ -748,151 +717,10 @@\n \r\n export default Home;\r\n \r\n const styles = StyleSheet.create({\r\n-\r\n-\r\n   container: {\r\n     flex: 1,\r\n-    backgroundColor: Colors.PRIMARY,\r\n-  },\r\n-  header: {\r\n-    padding: 20,\r\n-    paddingTop: 50,\r\n-    borderBottomLeftRadius: 20,\r\n-    borderBottomRightRadius: 20,\r\n-  },\r\n-  headerContent: {\r\n-    flexDirection: 'row',\r\n-    justifyContent: 'space-between',\r\n-    alignItems: 'center',\r\n-  },\r\n-  userInfo: {\r\n-    flexDirection: 'row',\r\n-    alignItems: 'center',\r\n-  },\r\n-  welcomeText: {\r\n-    fontFamily: 'poppins',\r\n-    fontSize: 16,\r\n-    color: Colors.WHITE,\r\n-  },\r\n-  userName: {\r\n-    fontFamily: 'poppins-bold',\r\n-    fontSize: 20,\r\n-    color: Colors.WHITE,\r\n-  },\r\n-  logo: {\r\n-    width: 50,\r\n-    height: 50,\r\n-    resizeMode: 'contain',\r\n-  },\r\n-  topRow: {\r\n-    flexDirection: 'row',\r\n-    justifyContent: 'space-between',\r\n-    paddingHorizontal: 15,\r\n-    marginTop: 20,\r\n-  },\r\n-  card: {\r\n-    borderRadius: 15,\r\n-    padding: 20,\r\n-    marginBottom: 15,\r\n-    shadowColor: '#000',\r\n-    shadowOffset: { width: 0, height: 2 },\r\n-    shadowOpacity: 0.1,\r\n-    shadowRadius: 6,\r\n-    elevation: 3,\r\n-    backgroundColor: Colors.WHITE,\r\n-  },\r\n-  pumpCard: {\r\n-    width: '48%',\r\n-  },\r\n-  tempCard: {\r\n-    width: '48%',\r\n-  },\r\n-  moistureCard: {\r\n-    marginHorizontal: 15,\r\n-  },\r\n-  cardHeader: {\r\n-    flexDirection: 'row',\r\n-    alignItems: 'center',\r\n-    marginBottom: 10,\r\n-  },\r\n-  cardLabel: {\r\n-    fontFamily: 'poppins-semibold',\r\n-    fontSize: 16,\r\n-    marginLeft: 10,\r\n-    color: Colors.DARKGREEN,\r\n-  },\r\n-  cardValue: {\r\n-    fontFamily: 'poppins-bold',\r\n-    fontSize: 28,\r\n-    color: Colors.DARK,\r\n-    marginVertical: 5,\r\n-  },\r\n-  pumpStatusContainer: {\r\n-    alignItems: 'center',\r\n-    marginVertical: 10,\r\n-  },\r\n-  pumpStatusIndicator: {\r\n-    paddingVertical: 8,\r\n-    paddingHorizontal: 15,\r\n-    borderRadius: 20,\r\n-    alignItems: 'center',\r\n-    justifyContent: 'center',\r\n-  },\r\n- \r\n-  pumpOff: {\r\n-    backgroundColor: Colors.LIGHTRED,\r\n-  },\r\n-  pumpStatusText: {\r\n-    fontFamily: 'poppins-bold',\r\n-    fontSize: 14,\r\n-    color: Colors.WHITE,\r\n-  },\r\n-  pumpStatusSubtext: {\r\n-    fontFamily: 'poppins',\r\n-    fontSize: 12,\r\n-    color: Colors.DARKGRAY,\r\n-    textAlign: 'center',\r\n-  },\r\n-  cardSubtext: {\r\n-    fontFamily: 'poppins',\r\n-    fontSize: 14,\r\n-    color: Colors.DARKGRAY,\r\n-  },\r\n-  moistureContent: {\r\n-    alignItems: 'center',\r\n-  },\r\n-  moistureValue: {\r\n-    fontFamily: 'poppins-bold',\r\n-    fontSize: 32,\r\n-    color: Colors.BLUE,\r\n-    marginBottom: 10,\r\n-  },\r\n-  moistureIndicatorContainer: {\r\n-    width: '100%',\r\n-    alignItems: 'center',\r\n-  },\r\n-  moistureIndicatorBackground: {\r\n-    height: 10,\r\n-    width: '100%',\r\n-    backgroundColor: Colors.LIGHTGRAY,\r\n-    borderRadius: 5,\r\n-    overflow: 'hidden',\r\n-    marginBottom: 5,\r\n-  },\r\n-  moistureIndicatorFill: {\r\n-    height: '100%',\r\n-    backgroundColor: Colors.BLUE,\r\n-    borderRadius: 5,\r\n-  },\r\n-  moistureStatus: {\r\n-    fontFamily: 'poppins-semibold',\r\n-    fontSize: 14,\r\n-    color: Colors.DARK,\r\n-  },\r\n-  container: {\r\n-    flex: 1,\r\n     backgroundColor: \"#f5f5f5\",\r\n   },\r\n   header: {\r\n     padding: 25,\r\n@@ -967,18 +795,18 @@\n     shadowOpacity: 0.1,\r\n     shadowRadius: 6,\r\n     elevation: 3,\r\n   },\r\n-  // moistureCard: {\r\n-  //   backgroundColor: \"#fff\",\r\n-  //   borderLeftWidth: 5,\r\n-  //   borderLeftColor: \"#4a90e2\",\r\n-  // },\r\n-  // tempCard: {\r\n-  //   backgroundColor: \"#fff\",\r\n-  //   borderLeftWidth: 5,\r\n-  //   borderLeftColor: \"#e74c3c\",\r\n-  // },\r\n+  moistureCard: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderLeftWidth: 5,\r\n+    borderLeftColor: \"#4a90e2\",\r\n+  },\r\n+  tempCard: {\r\n+    backgroundColor: \"#fff\",\r\n+    borderLeftWidth: 5,\r\n+    borderLeftColor: \"#e74c3c\",\r\n+  },\r\n   cardIcon: {\r\n     backgroundColor: \"rgba(74, 144, 226, 0.1)\",\r\n     width: 40,\r\n     height: 40,\r\n@@ -986,10 +814,20 @@\n     justifyContent: \"center\",\r\n     alignItems: \"center\",\r\n     marginBottom: 10,\r\n   },\r\n-\r\n-\r\n+  cardLabel: {\r\n+    fontFamily: \"poppins\",\r\n+    color: \"#666\",\r\n+    fontSize: 14,\r\n+    marginBottom: 5,\r\n+  },\r\n+  cardValue: {\r\n+    fontFamily: \"poppins-bold\",\r\n+    fontSize: 24,\r\n+    color: \"#333\",\r\n+    marginBottom: 5,\r\n+  },\r\n   cardStatus: {\r\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n@@ -1011,15 +849,31 @@\n     fontSize: 18,\r\n     color: \"#333\",\r\n     marginBottom: 15,\r\n   },\r\n-\r\n-\r\n+  pumpStatusContainer: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    justifyContent: \"space-between\",\r\n+  },\r\n+  pumpStatusIndicator: {\r\n+    paddingVertical: 8,\r\n+    paddingHorizontal: 15,\r\n+    borderRadius: 20,\r\n+    justifyContent: \"center\",\r\n+    alignItems: \"center\",\r\n+  },\r\n   pumpOn: {\r\n     backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n   },\r\n-\r\n-\r\n+  pumpOff: {\r\n+    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n+  },\r\n+  pumpStatusText: {\r\n+    fontFamily: \"poppins-bold\",\r\n+    fontSize: 14,\r\n+    color: \"#333\",\r\n+  },\r\n   pumpButtons: {\r\n     flexDirection: \"row\",\r\n     gap: 10,\r\n   },\r\n"
                },
                {
                    "date": 1745764789119,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -467,19 +467,9 @@\n \r\n         {/* Conținut în funcție de modul selectat */}\r\n         {pumpMode === \"manual\" && (\r\n           <View style={styles.pumpStatusContainer}>\r\n-            <View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n-\r\n+            \r\n             <View style={styles.pumpButtons}>\r\n             <TouchableOpacity\r\n                 style={[styles.pumpButton, styles.pumpOnButton]}\r\n                 onPress={handlePumpStart}\r\n"
                },
                {
                    "date": 1745764800532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -394,8 +394,18 @@\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n         <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n+<View\r\n+              style={[\r\n+                styles.pumpStatusIndicator,\r\n+                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+              ]}\r\n+            >\r\n+              <Text style={styles.pumpStatusText}>\r\n+                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+              </Text>\r\n+            </View>\r\n \r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n"
                },
                {
                    "date": 1745764835216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,7 +1,10 @@\n import { Ionicons } from \"@expo/vector-icons\";\r\n import { getDatabase, onValue, update } from \"firebase/database\";\r\n-import { saveToRealtimeDatabase, setupRealtimeListener } from '../../functions/firebase';\r\n+import {\r\n+  saveToRealtimeDatabase,\r\n+  setupRealtimeListener,\r\n+} from \"../../functions/firebase\";\r\n import { useAuth } from \"../../functions\";\r\n import {\r\n   View,\r\n   Text,\r\n@@ -19,9 +22,9 @@\n import { LinearGradient } from \"expo-linear-gradient\";\r\n import DateTimePicker from \"@react-native-community/datetimepicker\";\r\n import Slider from \"@react-native-community/slider\";\r\n import { getAuth } from \"firebase/auth\";\r\n-import { ref, get,set } from \"firebase/database\";\r\n+import { ref, get, set } from \"firebase/database\";\r\n \r\n import { realtimeDb } from \"../../functions/FirebaseConfig\";\r\n \r\n const Home = () => {\r\n@@ -40,9 +43,9 @@\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n       return;\r\n     }\r\n-  \r\n+\r\n     try {\r\n       const safeEmail = getSafeEmail(user.email);\r\n       const pumpStatusRef = ref(db, `users/${safeEmail}/controls/pumpStatus`);\r\n       await set(pumpStatusRef, \"on\");\r\n@@ -50,15 +53,15 @@\n     } catch (error) {\r\n       console.error(\"Eroare la pornirea pompei:\", error);\r\n     }\r\n   };\r\n-  \r\n+\r\n   const handlePumpStop = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n       return;\r\n     }\r\n-  \r\n+\r\n     try {\r\n       const safeEmail = getSafeEmail(user.email);\r\n       const pumpStatusRef = ref(db, `users/${safeEmail}/controls/pumpStatus`);\r\n       await set(pumpStatusRef, \"off\");\r\n@@ -66,9 +69,8 @@\n     } catch (error) {\r\n       console.error(\"Eroare la oprirea pompei:\", error);\r\n     }\r\n   };\r\n-  \r\n \r\n   const [schedule, setSchedule] = useState(\r\n     Array(7)\r\n       .fill()\r\n@@ -132,13 +134,13 @@\n \r\n   useEffect(() => {\r\n     const unsubscribeAuth = auth.onAuthStateChanged((user) => {\r\n       setUser(user);\r\n-      \r\n+\r\n       if (user?.email) {\r\n         const safeEmail = getSafeEmail(user.email);\r\n         const userRef = ref(db, `users/${safeEmail}`);\r\n-  \r\n+\r\n         const unsubscribeRealtime = onValue(userRef, (snapshot) => {\r\n           const data = snapshot.val();\r\n           if (data) {\r\n             // Actualizează senzorii\r\n@@ -147,126 +149,157 @@\n             }\r\n             if (data.temperature !== undefined) {\r\n               setTemperature(data.temperature);\r\n             }\r\n-            \r\n+\r\n             // Actualizează controalele\r\n             if (data.controls) {\r\n               setPumpMode(data.controls.pumpMode || \"manual\");\r\n               setPumpStatus(data.controls.pumpStatus || \"off\");\r\n               setAutoThreshold(data.controls.pragUmiditate || 30);\r\n             }\r\n-  \r\n+\r\n             // Actualizează programul\r\n             if (data.program) {\r\n-              const days = [\"Luni\", \"Marti\", \"Miercuri\", \"Joi\", \"Vineri\", \"Sambata\", \"Duminica\"];\r\n-              const newSchedule = Array(7).fill().map(() => ({ timeSlots: [] }));\r\n-              \r\n+              const days = [\r\n+                \"Luni\",\r\n+                \"Marti\",\r\n+                \"Miercuri\",\r\n+                \"Joi\",\r\n+                \"Vineri\",\r\n+                \"Sambata\",\r\n+                \"Duminica\",\r\n+              ];\r\n+              const newSchedule = Array(7)\r\n+                .fill()\r\n+                .map(() => ({ timeSlots: [] }));\r\n+\r\n               days.forEach((day, index) => {\r\n                 if (data.program[day]) {\r\n                   newSchedule[index].timeSlots = data.program[day]\r\n-                    .filter(time => time.includes('-'))\r\n-                    .map(time => {\r\n-                      const [startTime, endTime] = time.split('-');\r\n+                    .filter((time) => time.includes(\"-\"))\r\n+                    .map((time) => {\r\n+                      const [startTime, endTime] = time.split(\"-\");\r\n                       return { startTime, endTime };\r\n                     });\r\n                 }\r\n               });\r\n               setSchedule(newSchedule);\r\n             }\r\n           }\r\n         });\r\n-  \r\n+\r\n         return () => unsubscribeRealtime();\r\n       }\r\n     });\r\n-  \r\n+\r\n     return () => unsubscribeAuth();\r\n   }, []);\r\n \r\n-// Înlocuiește useEffect-ul existent pentru încărcarea datelor cu:\r\n-useEffect(() => {\r\n-  if (!user?.email) return;\r\n+  // Înlocuiește useEffect-ul existent pentru încărcarea datelor cu:\r\n+  useEffect(() => {\r\n+    if (!user?.email) return;\r\n \r\n-  const safeEmail = getSafeEmail(user.email);\r\n-  \r\n-  // 1. Ascultă pentru modificări în Realtime Database\r\n-  const unsubscribeRealtime = setupRealtimeListener(user.email, (data) => {\r\n-    if (data.soilHumidity !== undefined) {\r\n-      setMoisture(data.soilHumidity);\r\n-    }\r\n-    if (data.temperature !== undefined) {\r\n-      setTemperature(data.temperature);\r\n-    }\r\n-    \r\n-    \r\n-    if (data.controls) {\r\n-      setPumpMode(data.controls.pumpMode || \"manual\");\r\n-      setPumpStatus(data.controls.pumpStatus || \"off\");\r\n-      setAutoThreshold(data.controls.pragUmiditate || 30);\r\n-    }\r\n+    const safeEmail = getSafeEmail(user.email);\r\n \r\n-    if (data.program) {\r\n-      const newSchedule = Array(7).fill().map(() => ({ timeSlots: [] }));\r\n-      Object.keys(data.program).forEach(day => {\r\n-        const dayIndex = [\"Luni\", \"Marti\", \"Miercuri\", \"Joi\", \"Vineri\", \"Sambata\", \"Duminica\"].indexOf(day);\r\n-        if (dayIndex >= 0) {\r\n-          newSchedule[dayIndex].timeSlots = data.program[day]\r\n-            .filter(time => time.includes('-'))\r\n-            .map(time => {\r\n-              const [startTime, endTime] = time.split('-');\r\n-              return { startTime, endTime };\r\n-            });\r\n-        }\r\n-      });\r\n-      setSchedule(newSchedule);\r\n-    }\r\n-  });\r\n+    // 1. Ascultă pentru modificări în Realtime Database\r\n+    const unsubscribeRealtime = setupRealtimeListener(user.email, (data) => {\r\n+      if (data.soilHumidity !== undefined) {\r\n+        setMoisture(data.soilHumidity);\r\n+      }\r\n+      if (data.temperature !== undefined) {\r\n+        setTemperature(data.temperature);\r\n+      }\r\n \r\n-  return () => {\r\n-    unsubscribeRealtime();\r\n-  };\r\n-}, [user]);\r\n+      if (data.controls) {\r\n+        setPumpMode(data.controls.pumpMode || \"manual\");\r\n+        setPumpStatus(data.controls.pumpStatus || \"off\");\r\n+        setAutoThreshold(data.controls.pragUmiditate || 30);\r\n+      }\r\n \r\n+      if (data.program) {\r\n+        const newSchedule = Array(7)\r\n+          .fill()\r\n+          .map(() => ({ timeSlots: [] }));\r\n+        Object.keys(data.program).forEach((day) => {\r\n+          const dayIndex = [\r\n+            \"Luni\",\r\n+            \"Marti\",\r\n+            \"Miercuri\",\r\n+            \"Joi\",\r\n+            \"Vineri\",\r\n+            \"Sambata\",\r\n+            \"Duminica\",\r\n+          ].indexOf(day);\r\n+          if (dayIndex >= 0) {\r\n+            newSchedule[dayIndex].timeSlots = data.program[day]\r\n+              .filter((time) => time.includes(\"-\"))\r\n+              .map((time) => {\r\n+                const [startTime, endTime] = time.split(\"-\");\r\n+                return { startTime, endTime };\r\n+              });\r\n+          }\r\n+        });\r\n+        setSchedule(newSchedule);\r\n+      }\r\n+    });\r\n \r\n+    return () => {\r\n+      unsubscribeRealtime();\r\n+    };\r\n+  }, [user]);\r\n+\r\n   // Save all changes to Firestore\r\n   const saveSettings = async () => {\r\n     if (!user?.email) return;\r\n-  \r\n+\r\n     try {\r\n       const safeEmail = getSafeEmail(user.email);\r\n       const userRef = ref(db, `users/${safeEmail}`);\r\n-  \r\n+\r\n       await update(userRef, {\r\n         controls: {\r\n           pumpMode,\r\n           pumpStatus,\r\n-          pragUmiditate: autoThreshold\r\n+          pragUmiditate: autoThreshold,\r\n         },\r\n         program: {\r\n-          Luni: schedule[0].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Marti: schedule[1].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Miercuri: schedule[2].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Joi: schedule[3].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Vineri: schedule[4].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Sambata: schedule[5].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n-          Duminica: schedule[6].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`)\r\n+          Luni: schedule[0].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Marti: schedule[1].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Miercuri: schedule[2].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Joi: schedule[3].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Vineri: schedule[4].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Sambata: schedule[5].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n+          Duminica: schedule[6].timeSlots\r\n+            .filter((slot) => slot.startTime)\r\n+            .map((slot) => `${slot.startTime}-${slot.endTime}`),\r\n         },\r\n-        lastUpdated: Date.now()\r\n+        lastUpdated: Date.now(),\r\n       });\r\n-  \r\n+\r\n       // Actualizează stările salvate\r\n       setSavedPumpMode(pumpMode);\r\n       setSavedAutoThreshold(autoThreshold);\r\n       setSavedSchedule(schedule);\r\n-      \r\n+\r\n       console.log(\"Setări salvate cu succes!\");\r\n     } catch (error) {\r\n       console.error(\"Eroare la salvarea setărilor:\", error);\r\n     }\r\n   };\r\n \r\n-\r\n   // Handle pump mode change\r\n   const handlePumpModeChange = (newMode) => {\r\n     setPumpMode(newMode);\r\n   };\r\n@@ -291,9 +324,8 @@\n     const newSchedule = [...schedule]; // Creează o copie a programului\r\n     newSchedule[dayIndex].timeSlots.splice(slotIndex, 1); // Șterge intervalul\r\n     setSchedule(newSchedule); // Actualizează starea cu noul program\r\n   };\r\n- \r\n \r\n   const handleTimeChange = (dayIndex, slotIndex, field, value) => {\r\n     if (/^([0-1]?[0-9]|2[0-3]):?([0-5][0-9])?$/.test(value) || value === \"\") {\r\n       const newSchedule = [...schedule];\r\n@@ -380,32 +412,28 @@\n                 }`\r\n               : \"--\"}\r\n           </Text>\r\n         </View>\r\n-        \r\n       </View>\r\n-      <TouchableOpacity\r\n-            onPress={handleRefresh}\r\n-            style={styles.refreshButton}\r\n-          >\r\n-            <Text style={styles.refreshText}>\r\n-              <Feather name=\"refresh-ccw\" size={24} color=\"black\" />\r\n-            </Text>\r\n-          </TouchableOpacity> \r\n+      <TouchableOpacity onPress={handleRefresh} style={styles.refreshButton}>\r\n+        <Text style={styles.refreshText}>\r\n+          <Feather name=\"refresh-ccw\" size={24} color=\"black\" />\r\n+        </Text>\r\n+      </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n         <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n-<View\r\n-              style={[\r\n-                styles.pumpStatusIndicator,\r\n-                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-              ]}\r\n-            >\r\n-              <Text style={styles.pumpStatusText}>\r\n-                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-              </Text>\r\n-            </View>\r\n+        <View\r\n+          style={[\r\n+            styles.pumpStatusIndicator,\r\n+            pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+          ]}\r\n+        >\r\n+          <Text style={styles.pumpStatusText}>\r\n+            {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+          </Text>\r\n+        </View>\r\n \r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n@@ -477,11 +505,10 @@\n \r\n         {/* Conținut în funcție de modul selectat */}\r\n         {pumpMode === \"manual\" && (\r\n           <View style={styles.pumpStatusContainer}>\r\n-            \r\n             <View style={styles.pumpButtons}>\r\n-            <TouchableOpacity\r\n+              <TouchableOpacity\r\n                 style={[styles.pumpButton, styles.pumpOnButton]}\r\n                 onPress={handlePumpStart}\r\n               >\r\n                 <Text style={styles.buttonText}>Pornire</Text>\r\n"
                },
                {
                    "date": 1745764845286,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,9 +421,9 @@\n       </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n-        <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n+        <Text style={styles.sectionTitle}>Control pompă de apă\r\n         <View\r\n           style={[\r\n             styles.pumpStatusIndicator,\r\n             pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n@@ -432,9 +432,9 @@\n           <Text style={styles.pumpStatusText}>\r\n             {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n           </Text>\r\n         </View>\r\n-\r\n+</Text>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n"
                },
                {
                    "date": 1745764911979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,20 +421,21 @@\n       </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n-        <Text style={styles.sectionTitle}>Control pompă de apă\r\n-        <View\r\n-          style={[\r\n-            styles.pumpStatusIndicator,\r\n-            pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-          ]}\r\n-        >\r\n-          <Text style={styles.pumpStatusText}>\r\n-            {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-          </Text>\r\n-        </View>\r\n-</Text>\r\n+         <View style={styles.sectionHeader}>\r\n+    <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n+    <View\r\n+      style={[\r\n+        styles.pumpStatusIndicator,\r\n+        pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+      ]}\r\n+    >\r\n+      <Text style={styles.pumpStatusText}>\r\n+        {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+      </Text>\r\n+    </View>\r\n+  </View>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n"
                },
                {
                    "date": 1745764932210,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -859,31 +859,48 @@\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n   },\r\n-  pumpContainer: {\r\n-    backgroundColor: \"#fff\",\r\n-    marginHorizontal: 20,\r\n-    padding: 20,\r\n-    borderRadius: 15,\r\n-    marginBottom: 20,\r\n-    shadowColor: \"#000\",\r\n-    shadowOffset: { width: 0, height: 2 },\r\n-    shadowOpacity: 0.1,\r\n-    shadowRadius: 6,\r\n-    elevation: 3,\r\n-  },\r\n-  sectionTitle: {\r\n-    fontFamily: \"poppins-bold\",\r\n-    fontSize: 18,\r\n-    color: \"#333\",\r\n-    marginBottom: 15,\r\n-  },\r\n-  pumpStatusContainer: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    justifyContent: \"space-between\",\r\n-  },\r\n+ pumpContainer: {\r\n+  backgroundColor: \"#fff\",\r\n+  marginHorizontal: 20,\r\n+  padding: 20,\r\n+  borderRadius: 15,\r\n+  marginBottom: 20,\r\n+  shadowColor: \"#000\",\r\n+  shadowOffset: { width: 0, height: 2 },\r\n+  shadowOpacity: 0.1,\r\n+  shadowRadius: 6,\r\n+  elevation: 3,\r\n+},\r\n+sectionHeader: {  // 👈 Noul container pentru titlu + status\r\n+  flexDirection: 'row',\r\n+  alignItems: 'center',  // Aliniază pe verticală\r\n+  justifyContent: 'space-between',  // Spațiere între ele\r\n+  marginBottom: 15,\r\n+},\r\n+sectionTitle: {\r\n+  fontFamily: \"poppins-bold\",\r\n+  fontSize: 18,\r\n+  color: \"#333\",\r\n+},\r\n+pumpStatusIndicator: {\r\n+  paddingVertical: 5,\r\n+  paddingHorizontal: 12,\r\n+  borderRadius: 15,\r\n+},\r\n+pumpOn: {\r\n+  backgroundColor: Colors.GREEN,  // Sau \"#4CAF50\"\r\n+},\r\n+pumpOff: {\r\n+  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n+},\r\n+pumpStatusText: {\r\n+  fontFamily: \"poppins-bold\",\r\n+  fontSize: 12,\r\n+  color: \"#fff\",\r\n+  textTransform: \"uppercase\",\r\n+},\r\n   pumpStatusIndicator: {\r\n     paddingVertical: 8,\r\n     paddingHorizontal: 15,\r\n     borderRadius: 20,\r\n"
                },
                {
                    "date": 1745764945984,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -891,9 +891,9 @@\n pumpOn: {\r\n   backgroundColor: Colors.GREEN,  // Sau \"#4CAF50\"\r\n },\r\n pumpOff: {\r\n-  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n+  backgroundColor: Colors.RED, \r\n },\r\n pumpStatusText: {\r\n   fontFamily: \"poppins-bold\",\r\n   fontSize: 12,\r\n"
                },
                {
                    "date": 1745764953960,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -891,23 +891,17 @@\n pumpOn: {\r\n   backgroundColor: Colors.GREEN,  // Sau \"#4CAF50\"\r\n },\r\n pumpOff: {\r\n-  backgroundColor: Colors.RED, \r\n+  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n },\r\n pumpStatusText: {\r\n   fontFamily: \"poppins-bold\",\r\n   fontSize: 12,\r\n   color: \"#fff\",\r\n   textTransform: \"uppercase\",\r\n },\r\n-  pumpStatusIndicator: {\r\n-    paddingVertical: 8,\r\n-    paddingHorizontal: 15,\r\n-    borderRadius: 20,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n-  },\r\n+\r\n   pumpOn: {\r\n     backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n   },\r\n   pumpOff: {\r\n"
                },
                {
                    "date": 1745765015254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -900,14 +900,9 @@\n   color: \"#fff\",\r\n   textTransform: \"uppercase\",\r\n },\r\n \r\n-  pumpOn: {\r\n-    backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n-  },\r\n-  pumpOff: {\r\n-    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n-  },\r\n+\r\n   pumpStatusText: {\r\n     fontFamily: \"poppins-bold\",\r\n     fontSize: 14,\r\n     color: \"#333\",\r\n"
                },
                {
                    "date": 1745765058123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,21 +421,20 @@\n       </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n-         <View style={styles.sectionHeader}>\r\n-    <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n-    <View\r\n-      style={[\r\n-        styles.pumpStatusIndicator,\r\n-        pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-      ]}\r\n-    >\r\n-      <Text style={styles.pumpStatusText}>\r\n-        {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n-      </Text>\r\n-    </View>\r\n-  </View>\r\n+        <Text style={styles.sectionTitle}>Control pompă de apă\r\n+        <View\r\n+          style={[\r\n+            styles.pumpStatusIndicator,\r\n+            pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+          ]}\r\n+        >\r\n+          <Text style={styles.pumpStatusText}>\r\n+            {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n+          </Text>\r\n+        </View>\r\n+</Text>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n@@ -859,50 +858,44 @@\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n   },\r\n- pumpContainer: {\r\n-  backgroundColor: \"#fff\",\r\n-  marginHorizontal: 20,\r\n-  padding: 20,\r\n-  borderRadius: 15,\r\n-  marginBottom: 20,\r\n-  shadowColor: \"#000\",\r\n-  shadowOffset: { width: 0, height: 2 },\r\n-  shadowOpacity: 0.1,\r\n-  shadowRadius: 6,\r\n-  elevation: 3,\r\n-},\r\n-sectionHeader: {  // 👈 Noul container pentru titlu + status\r\n-  flexDirection: 'row',\r\n-  alignItems: 'center',  // Aliniază pe verticală\r\n-  justifyContent: 'space-between',  // Spațiere între ele\r\n-  marginBottom: 15,\r\n-},\r\n-sectionTitle: {\r\n-  fontFamily: \"poppins-bold\",\r\n-  fontSize: 18,\r\n-  color: \"#333\",\r\n-},\r\n-pumpStatusIndicator: {\r\n-  paddingVertical: 5,\r\n-  paddingHorizontal: 12,\r\n-  borderRadius: 15,\r\n-},\r\n-pumpOn: {\r\n-  backgroundColor: Colors.GREEN,  // Sau \"#4CAF50\"\r\n-},\r\n-pumpOff: {\r\n-  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n-},\r\n-pumpStatusText: {\r\n-  fontFamily: \"poppins-bold\",\r\n-  fontSize: 12,\r\n-  color: \"#fff\",\r\n-  textTransform: \"uppercase\",\r\n-},\r\n-\r\n-\r\n+  pumpContainer: {\r\n+    backgroundColor: \"#fff\",\r\n+    marginHorizontal: 20,\r\n+    padding: 20,\r\n+    borderRadius: 15,\r\n+    marginBottom: 20,\r\n+    shadowColor: \"#000\",\r\n+    shadowOffset: { width: 0, height: 2 },\r\n+    shadowOpacity: 0.1,\r\n+    shadowRadius: 6,\r\n+    elevation: 3,\r\n+  },\r\n+  sectionTitle: {\r\n+    fontFamily: \"poppins-bold\",\r\n+    fontSize: 18,\r\n+    color: \"#333\",\r\n+    marginBottom: 15,\r\n+  },\r\n+  pumpStatusContainer: {\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\",\r\n+    justifyContent: \"space-between\",\r\n+  },\r\n+  pumpStatusIndicator: {\r\n+    paddingVertical: 8,\r\n+    paddingHorizontal: 15,\r\n+    borderRadius: 20,\r\n+    justifyContent: \"center\",\r\n+    alignItems: \"center\",\r\n+  },\r\n+  pumpOn: {\r\n+    backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n+  },\r\n+  pumpOff: {\r\n+    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n+  },\r\n   pumpStatusText: {\r\n     fontFamily: \"poppins-bold\",\r\n     fontSize: 14,\r\n     color: \"#333\",\r\n"
                },
                {
                    "date": 1745765065874,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -421,20 +421,21 @@\n       </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n-        <Text style={styles.sectionTitle}>Control pompă de apă\r\n-        <View\r\n-          style={[\r\n-            styles.pumpStatusIndicator,\r\n-            pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-          ]}\r\n-        >\r\n-          <Text style={styles.pumpStatusText}>\r\n-            {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n-          </Text>\r\n-        </View>\r\n-</Text>\r\n+         <View style={styles.sectionHeader}>\r\n+    <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n+    <View\r\n+      style={[\r\n+        styles.pumpStatusIndicator,\r\n+        pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+      ]}\r\n+    >\r\n+      <Text style={styles.pumpStatusText}>\r\n+        {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+      </Text>\r\n+    </View>\r\n+  </View>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n@@ -858,44 +859,50 @@\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n   },\r\n-  pumpContainer: {\r\n-    backgroundColor: \"#fff\",\r\n-    marginHorizontal: 20,\r\n-    padding: 20,\r\n-    borderRadius: 15,\r\n-    marginBottom: 20,\r\n-    shadowColor: \"#000\",\r\n-    shadowOffset: { width: 0, height: 2 },\r\n-    shadowOpacity: 0.1,\r\n-    shadowRadius: 6,\r\n-    elevation: 3,\r\n-  },\r\n-  sectionTitle: {\r\n-    fontFamily: \"poppins-bold\",\r\n-    fontSize: 18,\r\n-    color: \"#333\",\r\n-    marginBottom: 15,\r\n-  },\r\n-  pumpStatusContainer: {\r\n-    flexDirection: \"row\",\r\n-    alignItems: \"center\",\r\n-    justifyContent: \"space-between\",\r\n-  },\r\n-  pumpStatusIndicator: {\r\n-    paddingVertical: 8,\r\n-    paddingHorizontal: 15,\r\n-    borderRadius: 20,\r\n-    justifyContent: \"center\",\r\n-    alignItems: \"center\",\r\n-  },\r\n-  pumpOn: {\r\n-    backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n-  },\r\n-  pumpOff: {\r\n-    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n-  },\r\n+ pumpContainer: {\r\n+  backgroundColor: \"#fff\",\r\n+  marginHorizontal: 20,\r\n+  padding: 20,\r\n+  borderRadius: 15,\r\n+  marginBottom: 20,\r\n+  shadowColor: \"#000\",\r\n+  shadowOffset: { width: 0, height: 2 },\r\n+  shadowOpacity: 0.1,\r\n+  shadowRadius: 6,\r\n+  elevation: 3,\r\n+},\r\n+sectionHeader: {  // 👈 Noul container pentru titlu + status\r\n+  flexDirection: 'row',\r\n+  alignItems: 'center',  // Aliniază pe verticală\r\n+  justifyContent: 'space-between',  // Spațiere între ele\r\n+  marginBottom: 15,\r\n+},\r\n+sectionTitle: {\r\n+  fontFamily: \"poppins-bold\",\r\n+  fontSize: 18,\r\n+  color: \"#333\",\r\n+},\r\n+pumpStatusIndicator: {\r\n+  paddingVertical: 5,\r\n+  paddingHorizontal: 12,\r\n+  borderRadius: 15,\r\n+},\r\n+pumpOn: {\r\n+  backgroundColor: Colors.LIGHT_GREEN,  // Sau \"#4CAF50\"\r\n+},\r\n+pumpOff: {\r\n+  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n+},\r\n+pumpStatusText: {\r\n+  fontFamily: \"poppins-bold\",\r\n+  fontSize: 12,\r\n+  color: \"#fff\",\r\n+  textTransform: \"uppercase\",\r\n+},\r\n+\r\n+\r\n   pumpStatusText: {\r\n     fontFamily: \"poppins-bold\",\r\n     fontSize: 14,\r\n     color: \"#333\",\r\n"
                },
                {
                    "date": 1745765331797,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,10 @@\n   const [savedPumpMode, setSavedPumpMode] = useState(\"manual\");\r\n   const [autoThreshold, setAutoThreshold] = useState(30);\r\n   const [savedAutoThreshold, setSavedAutoThreshold] = useState(30);\r\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n-\r\n+  const [pumpData, setPumpData] = useState(null);\r\n+  \r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n       return;\r\n@@ -421,21 +422,21 @@\n       </TouchableOpacity>\r\n \r\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n-         <View style={styles.sectionHeader}>\r\n-    <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n-    <View\r\n-      style={[\r\n-        styles.pumpStatusIndicator,\r\n-        pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-      ]}\r\n-    >\r\n-      <Text style={styles.pumpStatusText}>\r\n-        {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n-      </Text>\r\n-    </View>\r\n-  </View>\r\n+        <View style={styles.sectionHeader}>\r\n+          <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n+          <View\r\n+            style={[\r\n+              styles.pumpStatusIndicator,\r\n+              pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n+            ]}\r\n+          >\r\n+            <Text style={styles.pumpStatusText}>\r\n+              {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+            </Text>\r\n+          </View>\r\n+        </View>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n@@ -859,50 +860,50 @@\n     fontFamily: \"poppins\",\r\n     fontSize: 14,\r\n     color: \"#666\",\r\n   },\r\n- pumpContainer: {\r\n-  backgroundColor: \"#fff\",\r\n-  marginHorizontal: 20,\r\n-  padding: 20,\r\n-  borderRadius: 15,\r\n-  marginBottom: 20,\r\n-  shadowColor: \"#000\",\r\n-  shadowOffset: { width: 0, height: 2 },\r\n-  shadowOpacity: 0.1,\r\n-  shadowRadius: 6,\r\n-  elevation: 3,\r\n-},\r\n-sectionHeader: {  // 👈 Noul container pentru titlu + status\r\n-  flexDirection: 'row',\r\n-  alignItems: 'center',  // Aliniază pe verticală\r\n-  justifyContent: 'space-between',  // Spațiere între ele\r\n-  marginBottom: 15,\r\n-},\r\n-sectionTitle: {\r\n-  fontFamily: \"poppins-bold\",\r\n-  fontSize: 18,\r\n-  color: \"#333\",\r\n-},\r\n-pumpStatusIndicator: {\r\n-  paddingVertical: 5,\r\n-  paddingHorizontal: 12,\r\n-  borderRadius: 15,\r\n-},\r\n-pumpOn: {\r\n-  backgroundColor: Colors.LIGHT_GREEN,  // Sau \"#4CAF50\"\r\n-},\r\n-pumpOff: {\r\n-  backgroundColor: Colors.RED,  // Sau \"#F44336\"\r\n-},\r\n-pumpStatusText: {\r\n-  fontFamily: \"poppins-bold\",\r\n-  fontSize: 12,\r\n-  color: \"#fff\",\r\n-  textTransform: \"uppercase\",\r\n-},\r\n+  pumpContainer: {\r\n+    backgroundColor: \"#fff\",\r\n+    marginHorizontal: 20,\r\n+    padding: 20,\r\n+    borderRadius: 15,\r\n+    marginBottom: 20,\r\n+    shadowColor: \"#000\",\r\n+    shadowOffset: { width: 0, height: 2 },\r\n+    shadowOpacity: 0.1,\r\n+    shadowRadius: 6,\r\n+    elevation: 3,\r\n+  },\r\n+  sectionHeader: {\r\n+    // 👈 Noul container pentru titlu + status\r\n+    flexDirection: \"row\",\r\n+    alignItems: \"center\", // Aliniază pe verticală\r\n+    justifyContent: \"space-between\", // Spațiere între ele\r\n+    marginBottom: 15,\r\n+  },\r\n+  sectionTitle: {\r\n+    fontFamily: \"poppins-bold\",\r\n+    fontSize: 18,\r\n+    color: \"#333\",\r\n+  },\r\n+  pumpStatusIndicator: {\r\n+    paddingVertical: 5,\r\n+    paddingHorizontal: 12,\r\n+    borderRadius: 15,\r\n+  },\r\n+  pumpOn: {\r\n+    backgroundColor: Colors.LIGHT_GREEN, // Sau \"#4CAF50\"\r\n+  },\r\n+  pumpOff: {\r\n+    backgroundColor: Colors.RED, // Sau \"#F44336\"\r\n+  },\r\n+  pumpStatusText: {\r\n+    fontFamily: \"poppins-bold\",\r\n+    fontSize: 12,\r\n+    color: \"#fff\",\r\n+    textTransform: \"uppercase\",\r\n+  },\r\n \r\n-\r\n   pumpStatusText: {\r\n     fontFamily: \"poppins-bold\",\r\n     fontSize: 14,\r\n     color: \"#333\",\r\n"
                },
                {
                    "date": 1745765349714,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,9 +38,27 @@\n   const [autoThreshold, setAutoThreshold] = useState(30);\r\n   const [savedAutoThreshold, setSavedAutoThreshold] = useState(30);\r\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n   const [pumpData, setPumpData] = useState(null);\r\n-  \r\n+  useEffect(() => {\r\n+    // Referință către documentul din Firestore\r\n+    const docRef = doc(db, \"users\", \"danciudenisa12_gmail_com\", \"controls\", \"pump\");\r\n+\r\n+    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n+      if (doc.exists()) {\r\n+        setPumpData(doc.data());\r\n+      } else {\r\n+        console.log(\"Documentul nu există!\");\r\n+      }\r\n+      setLoading(false);\r\n+    });\r\n+\r\n+    return () => unsubscribe();\r\n+  }, []);\r\n+\r\n+  if (loading) {\r\n+    return <ActivityIndicator />;\r\n+  }\r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n       return;\r\n"
                },
                {
                    "date": 1745765360893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,9 @@\n \r\n import { realtimeDb } from \"../../functions/FirebaseConfig\";\r\n \r\n const Home = () => {\r\n+  const [loading, setLoading] = useState(true);\r\n   const [user, setUser] = useState(null);\r\n   const [userId, setUserId] = useState(null);\r\n   const [moisture, setMoisture] = useState(null);\r\n   const [temperature, setTemperature] = useState(null);\r\n@@ -57,8 +58,9 @@\n \r\n   if (loading) {\r\n     return <ActivityIndicator />;\r\n   }\r\n+\r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n       return;\r\n"
                },
                {
                    "date": 1745765409754,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -444,19 +444,17 @@\n       {/* Pump Control Section */}\r\n       <View style={styles.pumpContainer}>\r\n         <View style={styles.sectionHeader}>\r\n           <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n-          <View\r\n-            style={[\r\n-              styles.pumpStatusIndicator,\r\n-              pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n-            ]}\r\n-          >\r\n-            <Text style={styles.pumpStatusText}>\r\n-              {pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n-            </Text>\r\n-          </View>\r\n+          <View style={[\r\n+          styles.pumpStatusIndicator,\r\n+          pumpData?.pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff\r\n+        ]}>\r\n+          <Text style={styles.pumpStatusText}>\r\n+            {pumpData?.pumpStatus === \"on\" ? \"ACTIVĂ\" : \"INACTIVĂ\"}\r\n+          </Text>\r\n         </View>\r\n+        </View>\r\n         {/* Selector mod de funcționare */}\r\n         <View style={styles.modeSelector}>\r\n           <TouchableOpacity\r\n             style={[\r\n"
                },
                {
                    "date": 1745765454810,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   Image,\r\n   TextInput,\r\n   StyleSheet,\r\n   TouchableOpacity,\r\n-  ScrollView,\r\n+  ScrollView, Activi\r\n } from \"react-native\";\r\n import Feather from \"@expo/vector-icons/Feather\";\r\n import React, { useEffect, useState } from \"react\";\r\n import { Fontisto } from \"@expo/vector-icons\";\r\n"
                },
                {
                    "date": 1745765602196,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n   Image,\r\n   TextInput,\r\n   StyleSheet,\r\n   TouchableOpacity,\r\n-  ScrollView, Activi\r\n+  ScrollView, ActivityIndicator\r\n } from \"react-native\";\r\n import Feather from \"@expo/vector-icons/Feather\";\r\n import React, { useEffect, useState } from \"react\";\r\n import { Fontisto } from \"@expo/vector-icons\";\r\n@@ -39,8 +39,9 @@\n   const [autoThreshold, setAutoThreshold] = useState(30);\r\n   const [savedAutoThreshold, setSavedAutoThreshold] = useState(30);\r\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n   const [pumpData, setPumpData] = useState(null);\r\n+  \r\n   useEffect(() => {\r\n     // Referință către documentul din Firestore\r\n     const docRef = doc(db, \"users\", \"danciudenisa12_gmail_com\", \"controls\", \"pump\");\r\n \r\n"
                },
                {
                    "date": 1745765666359,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,26 +41,30 @@\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n   const [pumpData, setPumpData] = useState(null);\r\n   \r\n   useEffect(() => {\r\n-    // Referință către documentul din Firestore\r\n-    const docRef = doc(db, \"users\", \"danciudenisa12_gmail_com\", \"controls\", \"pump\");\r\n+    // Dacă nu există un utilizator autentificat, ieșim din funcție\r\n+    if (!user?.email) return;\r\n \r\n-    const unsubscribe = onSnapshot(docRef, (doc) => {\r\n-      if (doc.exists()) {\r\n-        setPumpData(doc.data());\r\n-      } else {\r\n-        console.log(\"Documentul nu există!\");\r\n+    const safeEmail = getSafeEmail(user.email);\r\n+    \r\n+    // Referința către statusul pompei în Realtime Database\r\n+    const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n+\r\n+    // Ascultă modificările în Realtime Database\r\n+    const unsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n+      const pumpStatusValue = snapshot.val();\r\n+      if (pumpStatusValue !== null) {\r\n+        setPumpStatus(pumpStatusValue);\r\n+        console.log(\"Statusul pompei actualizat:\", pumpStatusValue);\r\n       }\r\n-      setLoading(false);\r\n     });\r\n \r\n+    // Cleanup la unmount\r\n     return () => unsubscribe();\r\n-  }, []);\r\n+  }, [user]);\r\n \r\n-  if (loading) {\r\n-    return <ActivityIndicator />;\r\n-  }\r\n+ \r\n \r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n"
                },
                {
                    "date": 1745765986656,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -41,28 +41,24 @@\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n   const [pumpData, setPumpData] = useState(null);\r\n   \r\n   useEffect(() => {\r\n-    // Dacă nu există un utilizator autentificat, ieșim din funcție\r\n     if (!user?.email) return;\r\n-\r\n+  \r\n     const safeEmail = getSafeEmail(user.email);\r\n-    \r\n-    // Referința către statusul pompei în Realtime Database\r\n     const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n-\r\n-    // Ascultă modificările în Realtime Database\r\n+  \r\n     const unsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n       const pumpStatusValue = snapshot.val();\r\n       if (pumpStatusValue !== null) {\r\n         setPumpStatus(pumpStatusValue);\r\n-        console.log(\"Statusul pompei actualizat:\", pumpStatusValue);\r\n+        console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue); // Verifică ce valoare se citește\r\n       }\r\n     });\r\n-\r\n-    // Cleanup la unmount\r\n+  \r\n     return () => unsubscribe();\r\n   }, [user]);\r\n+  ;\r\n \r\n  \r\n \r\n   const handlePumpStart = async () => {\r\n"
                },
                {
                    "date": 1745765995979,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -56,10 +56,9 @@\n     });\r\n   \r\n     return () => unsubscribe();\r\n   }, [user]);\r\n-  ;\r\n-\r\n+  \r\n  \r\n \r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n"
                },
                {
                    "date": 1745766022897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,26 +40,8 @@\n   const [savedAutoThreshold, setSavedAutoThreshold] = useState(30);\r\n   const [scheduledDays, setScheduledDays] = useState([]);\r\n   const [pumpData, setPumpData] = useState(null);\r\n   \r\n-  useEffect(() => {\r\n-    if (!user?.email) return;\r\n-  \r\n-    const safeEmail = getSafeEmail(user.email);\r\n-    const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n-  \r\n-    const unsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n-      const pumpStatusValue = snapshot.val();\r\n-      if (pumpStatusValue !== null) {\r\n-        setPumpStatus(pumpStatusValue);\r\n-        console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue); // Verifică ce valoare se citește\r\n-      }\r\n-    });\r\n-  \r\n-    return () => unsubscribe();\r\n-  }, [user]);\r\n-  \r\n- \r\n \r\n   const handlePumpStart = async () => {\r\n     if (!user?.email) {\r\n       console.error(\"Nu există utilizator autentificat\");\r\n@@ -371,8 +353,26 @@\n     });\r\n \r\n     return () => unsubscribe(); // Cleanup la unmount\r\n   }, [user]);\r\n+  useEffect(() => {\r\n+    if (!user?.email) return;\r\n+  \r\n+    const safeEmail = getSafeEmail(user.email);\r\n+    const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n+  \r\n+    const unsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n+      const pumpStatusValue = snapshot.val();\r\n+      if (pumpStatusValue !== null) {\r\n+        setPumpStatus(pumpStatusValue);\r\n+        console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue); // Verifică ce valoare se citește\r\n+      }\r\n+    });\r\n+  \r\n+    return () => unsubscribe();\r\n+  }, [user]);\r\n+  \r\n+ \r\n \r\n   const email = user?.email || \"\"; // Folosim operatorul de coalescență pentru a evita erorile dacă user sau email sunt null/undefined\r\n   const username = email.split(\"@\")[0]; // Împarte email-ul la '@' și ia prima parte\r\n \r\n"
                },
                {
                    "date": 1745766111446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -339,37 +339,36 @@\n \r\n   // fetch umiditate\r\n   useEffect(() => {\r\n     if (!user || !user.email) return;\r\n-\r\n+  \r\n     const safeEmail = getSafeEmail(user.email);\r\n+  \r\n+    // Subscribe to soilHumidity\r\n     const moistureRef = ref(realtimeDb, `users/${safeEmail}/soilHumidity`);\r\n-\r\n-    const unsubscribe = onValue(moistureRef, (snapshot) => {\r\n+    const moistureUnsubscribe = onValue(moistureRef, (snapshot) => {\r\n       const moistureValue = snapshot.val();\r\n       if (moistureValue !== null) {\r\n         setMoisture(moistureValue);\r\n         console.log(\"Umiditate actualizată:\", moistureValue);\r\n       }\r\n     });\r\n-\r\n-    return () => unsubscribe(); // Cleanup la unmount\r\n-  }, [user]);\r\n-  useEffect(() => {\r\n-    if (!user?.email) return;\r\n   \r\n-    const safeEmail = getSafeEmail(user.email);\r\n+    // Subscribe to pumpStatus\r\n     const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n-  \r\n-    const unsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n+    const pumpStatusUnsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n       const pumpStatusValue = snapshot.val();\r\n       if (pumpStatusValue !== null) {\r\n         setPumpStatus(pumpStatusValue);\r\n-        console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue); // Verifică ce valoare se citește\r\n+        console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue);\r\n       }\r\n     });\r\n   \r\n-    return () => unsubscribe();\r\n+    // Cleanup function to unsubscribe when the component unmounts or user changes\r\n+    return () => {\r\n+      moistureUnsubscribe();\r\n+      pumpStatusUnsubscribe();\r\n+    };\r\n   }, [user]);\r\n   \r\n  \r\n \r\n"
                },
                {
                    "date": 1745766118814,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -336,9 +336,9 @@\n       setSchedule(newSchedule);\r\n     }\r\n   };\r\n \r\n-  // fetch umiditate\r\n+  // fetch umiditate si stare pompa\r\n   useEffect(() => {\r\n     if (!user || !user.email) return;\r\n   \r\n     const safeEmail = getSafeEmail(user.email);\r\n"
                },
                {
                    "date": 1745766232679,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -357,8 +357,9 @@\n     const pumpStatusRef = ref(realtimeDb, `users/${safeEmail}/controls/pumpStatus`);\r\n     const pumpStatusUnsubscribe = onValue(pumpStatusRef, (snapshot) => {\r\n       const pumpStatusValue = snapshot.val();\r\n       if (pumpStatusValue !== null) {\r\n+        setPumpData({ pumpStatus: pumpStatusValue });  \r\n         setPumpStatus(pumpStatusValue);\r\n         console.log(\"Statusul pompei actualizat din baza de date:\", pumpStatusValue);\r\n       }\r\n     });\r\n"
                }
            ],
            "date": 1745760995534,
            "name": "Commit-0",
            "content": "import { Ionicons } from \"@expo/vector-icons\";\r\nimport { getDatabase, onValue, update } from \"firebase/database\";\r\nimport { saveToRealtimeDatabase, setupRealtimeListener } from '../../functions/firebase';\r\nimport { useAuth } from \"../../functions\";\r\nimport {\r\n  View,\r\n  Text,\r\n  Button,\r\n  Image,\r\n  TextInput,\r\n  StyleSheet,\r\n  TouchableOpacity,\r\n  ScrollView,\r\n} from \"react-native\";\r\nimport Feather from \"@expo/vector-icons/Feather\";\r\nimport React, { useEffect, useState } from \"react\";\r\nimport { Fontisto } from \"@expo/vector-icons\";\r\nimport { Colors } from \"../components/constants/Colors\";\r\nimport { LinearGradient } from \"expo-linear-gradient\";\r\nimport DateTimePicker from \"@react-native-community/datetimepicker\";\r\nimport Slider from \"@react-native-community/slider\";\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { ref, get,set } from \"firebase/database\";\r\n\r\nimport { realtimeDb } from \"../../functions/FirebaseConfig\";\r\n\r\nconst Home = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [userId, setUserId] = useState(null);\r\n  const [moisture, setMoisture] = useState(null);\r\n  const [temperature, setTemperature] = useState(null);\r\n  const [pumpStatus, setPumpStatus] = useState(\"off\");\r\n  const [pumpMode, setPumpMode] = useState(\"manual\");\r\n  const [savedPumpMode, setSavedPumpMode] = useState(\"manual\");\r\n  const [autoThreshold, setAutoThreshold] = useState(30);\r\n  const [savedAutoThreshold, setSavedAutoThreshold] = useState(30);\r\n  const [scheduledDays, setScheduledDays] = useState([]);\r\n\r\n  const handlePumpStart = async () => {\r\n    if (!user?.email) {\r\n      console.error(\"Nu există utilizator autentificat\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const safeEmail = getSafeEmail(user.email);\r\n      const pumpStatusRef = ref(db, `users/${safeEmail}/controls/pumpStatus`);\r\n      await set(pumpStatusRef, \"on\");\r\n      console.log(\"Pompa pornită în baza de date\");\r\n    } catch (error) {\r\n      console.error(\"Eroare la pornirea pompei:\", error);\r\n    }\r\n  };\r\n  \r\n  const handlePumpStop = async () => {\r\n    if (!user?.email) {\r\n      console.error(\"Nu există utilizator autentificat\");\r\n      return;\r\n    }\r\n  \r\n    try {\r\n      const safeEmail = getSafeEmail(user.email);\r\n      const pumpStatusRef = ref(db, `users/${safeEmail}/controls/pumpStatus`);\r\n      await set(pumpStatusRef, \"off\");\r\n      console.log(\"Pompa oprită în baza de date\");\r\n    } catch (error) {\r\n      console.error(\"Eroare la oprirea pompei:\", error);\r\n    }\r\n  };\r\n  \r\n\r\n  const [schedule, setSchedule] = useState(\r\n    Array(7)\r\n      .fill()\r\n      .map(() => ({ timeSlots: [{ startTime: \"\", endTime: \"\" }] }))\r\n  );\r\n  const [savedSchedule, setSavedSchedule] = useState(\r\n    Array(7)\r\n      .fill()\r\n      .map(() => ({ timeSlots: [{ startTime: \"\", endTime: \"\" }] }))\r\n  );\r\n  const auth = getAuth();\r\n  const db = getDatabase();\r\n  const getSafeEmail = (email) =>\r\n    email ? email.toLowerCase().replace(/\\./g, \"_\").replace(/@/g, \"_\") : \"\";\r\n\r\n  const getMoistureData = async () => {\r\n    if (!user || !user.email) return;\r\n\r\n    const safeEmail = getSafeEmail(user.email);\r\n    const moisture = ref(realtimeDb, `users/${safeEmail}/soilHumidity`);\r\n\r\n    const snapshot = await get(moisture);\r\n    const moistureValue = snapshot.val();\r\n    if (moistureValue !== null) {\r\n      setMoisture(moistureValue);\r\n      console.log(\"moisture actualizată:\", moistureValue);\r\n    }\r\n  };\r\n  const getTemperatureData = async () => {\r\n    if (!user || !user.email) return;\r\n\r\n    const safeEmail = getSafeEmail(user.email);\r\n    const temperatureRef = ref(realtimeDb, `users/${safeEmail}/temperature`);\r\n\r\n    const snapshot = await get(temperatureRef);\r\n    const tempValue = snapshot.val();\r\n    if (tempValue !== null) {\r\n      setTemperature(tempValue);\r\n      console.log(\"Temperatura actualizată:\", tempValue);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!user) return;\r\n\r\n    // Actualizare automată la fiecare 60 de secunde\r\n    const interval = setInterval(() => {\r\n      getMoistureData();\r\n      getTemperatureData();\r\n    }, 600000); // Actualizare la fiecare 60 de secunde\r\n\r\n    // Cleanup pentru interval la demontare\r\n    return () => clearInterval(interval);\r\n  }, [user]);\r\n\r\n  // Handle la refresh manual\r\n  const handleRefresh = () => {\r\n    getMoistureData();\r\n    getTemperatureData(); // Apelează funcția pentru a actualiza umiditatea imediat\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unsubscribeAuth = auth.onAuthStateChanged((user) => {\r\n      setUser(user);\r\n      \r\n      if (user?.email) {\r\n        const safeEmail = getSafeEmail(user.email);\r\n        const userRef = ref(db, `users/${safeEmail}`);\r\n  \r\n        const unsubscribeRealtime = onValue(userRef, (snapshot) => {\r\n          const data = snapshot.val();\r\n          if (data) {\r\n            // Actualizează senzorii\r\n            if (data.soilHumidity !== undefined) {\r\n              setMoisture(data.soilHumidity);\r\n            }\r\n            if (data.temperature !== undefined) {\r\n              setTemperature(data.temperature);\r\n            }\r\n            \r\n            // Actualizează controalele\r\n            if (data.controls) {\r\n              setPumpMode(data.controls.pumpMode || \"manual\");\r\n              setPumpStatus(data.controls.pumpStatus || \"off\");\r\n              setAutoThreshold(data.controls.pragUmiditate || 30);\r\n            }\r\n  \r\n            // Actualizează programul\r\n            if (data.program) {\r\n              const days = [\"Luni\", \"Marti\", \"Miercuri\", \"Joi\", \"Vineri\", \"Sambata\", \"Duminica\"];\r\n              const newSchedule = Array(7).fill().map(() => ({ timeSlots: [] }));\r\n              \r\n              days.forEach((day, index) => {\r\n                if (data.program[day]) {\r\n                  newSchedule[index].timeSlots = data.program[day]\r\n                    .filter(time => time.includes('-'))\r\n                    .map(time => {\r\n                      const [startTime, endTime] = time.split('-');\r\n                      return { startTime, endTime };\r\n                    });\r\n                }\r\n              });\r\n              setSchedule(newSchedule);\r\n            }\r\n          }\r\n        });\r\n  \r\n        return () => unsubscribeRealtime();\r\n      }\r\n    });\r\n  \r\n    return () => unsubscribeAuth();\r\n  }, []);\r\n\r\n// Înlocuiește useEffect-ul existent pentru încărcarea datelor cu:\r\nuseEffect(() => {\r\n  if (!user?.email) return;\r\n\r\n  const safeEmail = getSafeEmail(user.email);\r\n  \r\n  // 1. Ascultă pentru modificări în Realtime Database\r\n  const unsubscribeRealtime = setupRealtimeListener(user.email, (data) => {\r\n    if (data.soilHumidity !== undefined) {\r\n      setMoisture(data.soilHumidity);\r\n    }\r\n    if (data.temperature !== undefined) {\r\n      setTemperature(data.temperature);\r\n    }\r\n    \r\n    \r\n    if (data.controls) {\r\n      setPumpMode(data.controls.pumpMode || \"manual\");\r\n      setPumpStatus(data.controls.pumpStatus || \"off\");\r\n      setAutoThreshold(data.controls.pragUmiditate || 30);\r\n    }\r\n\r\n    if (data.program) {\r\n      const newSchedule = Array(7).fill().map(() => ({ timeSlots: [] }));\r\n      Object.keys(data.program).forEach(day => {\r\n        const dayIndex = [\"Luni\", \"Marti\", \"Miercuri\", \"Joi\", \"Vineri\", \"Sambata\", \"Duminica\"].indexOf(day);\r\n        if (dayIndex >= 0) {\r\n          newSchedule[dayIndex].timeSlots = data.program[day]\r\n            .filter(time => time.includes('-'))\r\n            .map(time => {\r\n              const [startTime, endTime] = time.split('-');\r\n              return { startTime, endTime };\r\n            });\r\n        }\r\n      });\r\n      setSchedule(newSchedule);\r\n    }\r\n  });\r\n\r\n  return () => {\r\n    unsubscribeRealtime();\r\n  };\r\n}, [user]);\r\n\r\n\r\n  // Save all changes to Firestore\r\n  const saveSettings = async () => {\r\n    if (!user?.email) return;\r\n  \r\n    try {\r\n      const safeEmail = getSafeEmail(user.email);\r\n      const userRef = ref(db, `users/${safeEmail}`);\r\n  \r\n      await update(userRef, {\r\n        controls: {\r\n          pumpMode,\r\n          pumpStatus,\r\n          pragUmiditate: autoThreshold\r\n        },\r\n        program: {\r\n          Luni: schedule[0].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Marti: schedule[1].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Miercuri: schedule[2].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Joi: schedule[3].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Vineri: schedule[4].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Sambata: schedule[5].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`),\r\n          Duminica: schedule[6].timeSlots.filter(slot => slot.startTime).map(slot => `${slot.startTime}-${slot.endTime}`)\r\n        },\r\n        lastUpdated: Date.now()\r\n      });\r\n  \r\n      // Actualizează stările salvate\r\n      setSavedPumpMode(pumpMode);\r\n      setSavedAutoThreshold(autoThreshold);\r\n      setSavedSchedule(schedule);\r\n      \r\n      console.log(\"Setări salvate cu succes!\");\r\n    } catch (error) {\r\n      console.error(\"Eroare la salvarea setărilor:\", error);\r\n    }\r\n  };\r\n\r\n\r\n  // Handle pump mode change\r\n  const handlePumpModeChange = (newMode) => {\r\n    setPumpMode(newMode);\r\n  };\r\n\r\n  const toggleDay = (dayIndex) => {\r\n    setScheduledDays((prev) =>\r\n      prev.includes(dayIndex)\r\n        ? prev.filter((day) => day !== dayIndex)\r\n        : [...prev, dayIndex]\r\n    );\r\n  };\r\n\r\n  const addTimeSlot = (dayIndex) => {\r\n    if (schedule[dayIndex].timeSlots.length < 3) {\r\n      const newSchedule = [...schedule];\r\n      newSchedule[dayIndex].timeSlots.push({ startTime: \"\", endTime: \"\" });\r\n      setSchedule(newSchedule);\r\n    }\r\n  };\r\n\r\n  const removeTimeSlot = (dayIndex, slotIndex) => {\r\n    const newSchedule = [...schedule]; // Creează o copie a programului\r\n    newSchedule[dayIndex].timeSlots.splice(slotIndex, 1); // Șterge intervalul\r\n    setSchedule(newSchedule); // Actualizează starea cu noul program\r\n  };\r\n \r\n\r\n  const handleTimeChange = (dayIndex, slotIndex, field, value) => {\r\n    if (/^([0-1]?[0-9]|2[0-3]):?([0-5][0-9])?$/.test(value) || value === \"\") {\r\n      const newSchedule = [...schedule];\r\n      newSchedule[dayIndex].timeSlots[slotIndex][field] = value;\r\n      setSchedule(newSchedule);\r\n    }\r\n  };\r\n\r\n  // fetch umiditate\r\n  useEffect(() => {\r\n    if (!user || !user.email) return;\r\n\r\n    const safeEmail = getSafeEmail(user.email);\r\n    const moistureRef = ref(realtimeDb, `users/${safeEmail}/soilHumidity`);\r\n\r\n    const unsubscribe = onValue(moistureRef, (snapshot) => {\r\n      const moistureValue = snapshot.val();\r\n      if (moistureValue !== null) {\r\n        setMoisture(moistureValue);\r\n        console.log(\"Umiditate actualizată:\", moistureValue);\r\n      }\r\n    });\r\n\r\n    return () => unsubscribe(); // Cleanup la unmount\r\n  }, [user]);\r\n\r\n  const email = user?.email || \"\"; // Folosim operatorul de coalescență pentru a evita erorile dacă user sau email sunt null/undefined\r\n  const username = email.split(\"@\")[0]; // Împarte email-ul la '@' și ia prima parte\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      {/* Header Section */}\r\n      <LinearGradient\r\n        colors={[Colors.DARKGREEN, Colors.WHITEGREEN]}\r\n        style={styles.header}\r\n      >\r\n        <View style={styles.headerContent}>\r\n          <View style={styles.userInfo}>\r\n            {/* <Image\r\n        source={{ uri: user?.imageUrl }}\r\n        style={styles.userImage}\r\n      /> */}\r\n            <View>\r\n              <Text style={styles.welcomeText}>Welcome back,</Text>\r\n              <Text style={styles.userName}>{username} 🎉</Text>\r\n            </View>\r\n          </View>\r\n          {/* Adaugă logo-ul în partea dreaptă */}\r\n          <Image\r\n            source={require(\"../../assets/icons/logo.png\")} // sau {uri: 'https://...'} pentru URL\r\n            style={styles.logo}\r\n          />\r\n        </View>\r\n      </LinearGradient>\r\n\r\n      {/* Dashboard Cards */}\r\n      <View style={styles.cardsContainer}>\r\n        {/* Moisture Card */}\r\n        <View style={[styles.card, styles.moistureCard]}>\r\n          <View style={styles.cardIcon}>\r\n            <Fontisto name=\"blood-drop\" size={24} color=\"#4a90e2\" />\r\n          </View>\r\n          <Text style={styles.cardLabel}>Umiditate sol</Text>\r\n          <Text style={styles.cardValue}>\r\n            {moisture !== null ? `${moisture}%` : \"--\"}\r\n          </Text>\r\n          <Text style={styles.cardStatus}>\r\n            {moisture > 60 ? \"Optim\" : moisture > 30 ? \"Uscat\" : \"Foarte uscat\"}\r\n          </Text>\r\n        </View>\r\n\r\n        {/* Temperature Card */}\r\n        <View style={[styles.card, styles.tempCard]}>\r\n          <View style={styles.cardIcon}>\r\n            <Ionicons name=\"thermometer\" size={24} color=\"#e74c3c\" />\r\n          </View>\r\n          <Text style={styles.cardLabel}>Temperatură</Text>\r\n          <Text style={styles.cardValue}>\r\n            {temperature !== null\r\n              ? `${\r\n                  parseFloat(temperature) % 1 === 0\r\n                    ? temperature + \"°C\"\r\n                    : Number(temperature).toFixed(2) + \"°C\"\r\n                }`\r\n              : \"--\"}\r\n          </Text>\r\n        </View>\r\n        \r\n      </View>\r\n      <TouchableOpacity\r\n            onPress={handleRefresh}\r\n            style={styles.refreshButton}\r\n          >\r\n            <Text style={styles.refreshText}>\r\n              <Feather name=\"refresh-ccw\" size={24} color=\"black\" />\r\n            </Text>\r\n          </TouchableOpacity> \r\n\r\n      {/* Pump Control Section */}\r\n      <View style={styles.pumpContainer}>\r\n        <Text style={styles.sectionTitle}>Control pompă de apă</Text>\r\n\r\n        {/* Selector mod de funcționare */}\r\n        <View style={styles.modeSelector}>\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.modeButton,\r\n              pumpMode === \"manual\" && styles.modeButtonActive,\r\n            ]}\r\n            onPress={() => handlePumpModeChange(\"manual\")}\r\n          >\r\n            <Ionicons\r\n              name=\"hand-right\"\r\n              size={20}\r\n              color={pumpMode === \"manual\" ? \"#fff\" : \"#4a90e2\"}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.modeButtonText,\r\n                pumpMode === \"manual\" && styles.modeButtonTextActive,\r\n              ]}\r\n            >\r\n              Manual\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.modeButton,\r\n              pumpMode === \"auto\" && styles.modeButtonActive,\r\n            ]}\r\n            onPress={() => handlePumpModeChange(\"auto\")}\r\n          >\r\n            <Ionicons\r\n              name=\"settings\"\r\n              size={20}\r\n              color={pumpMode === \"auto\" ? \"#fff\" : \"#4a90e2\"}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.modeButtonText,\r\n                pumpMode === \"auto\" && styles.modeButtonTextActive,\r\n              ]}\r\n            >\r\n              Automat\r\n            </Text>\r\n          </TouchableOpacity>\r\n\r\n          <TouchableOpacity\r\n            style={[\r\n              styles.modeButton,\r\n              pumpMode === \"scheduled\" && styles.modeButtonActive,\r\n            ]}\r\n            onPress={() => handlePumpModeChange(\"scheduled\")}\r\n          >\r\n            <Ionicons\r\n              name=\"calendar\"\r\n              size={20}\r\n              color={pumpMode === \"scheduled\" ? \"#fff\" : \"#4a90e2\"}\r\n            />\r\n            <Text\r\n              style={[\r\n                styles.modeButtonText,\r\n                pumpMode === \"scheduled\" && styles.modeButtonTextActive,\r\n              ]}\r\n            >\r\n              Programat\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {/* Conținut în funcție de modul selectat */}\r\n        {pumpMode === \"manual\" && (\r\n          <View style={styles.pumpStatusContainer}>\r\n            <View\r\n              style={[\r\n                styles.pumpStatusIndicator,\r\n                pumpStatus === \"on\" ? styles.pumpOn : styles.pumpOff,\r\n              ]}\r\n            >\r\n              <Text style={styles.pumpStatusText}>\r\n                {pumpStatus === \"on\" ? \"ACTIVE\" : \"INACTIVE\"}\r\n              </Text>\r\n            </View>\r\n\r\n            <View style={styles.pumpButtons}>\r\n            <TouchableOpacity\r\n                style={[styles.pumpButton, styles.pumpOnButton]}\r\n                onPress={handlePumpStart}\r\n              >\r\n                <Text style={styles.buttonText}>Pornire</Text>\r\n              </TouchableOpacity>\r\n\r\n              <TouchableOpacity\r\n                style={[styles.pumpButton, styles.pumpOffButton]}\r\n                onPress={handlePumpStop}\r\n              >\r\n                <Text style={styles.buttonText}>Oprire</Text>\r\n              </TouchableOpacity>\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {pumpMode === \"auto\" && (\r\n          <View style={styles.autoModeContainer}>\r\n            <Text style={styles.autoModeText}>\r\n              Pompa va funcționa automat când umiditatea solului scade sub\r\n              nivelul selectat\r\n            </Text>\r\n            <View style={styles.thresholdControl}>\r\n              <Text style={styles.thresholdLabel}>Prag umiditate:</Text>\r\n              <Slider\r\n                value={autoThreshold}\r\n                onValueChange={setAutoThreshold}\r\n                minimumValue={10}\r\n                maximumValue={50}\r\n                step={5}\r\n                minimumTrackTintColor=\"#4a90e2\"\r\n                maximumTrackTintColor=\"#d3d3d3\"\r\n                thumbTintColor=\"#4a90e2\"\r\n              />\r\n              <Text style={styles.thresholdValue}>{autoThreshold}%</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {pumpMode === \"scheduled\" && (\r\n          <View style={styles.scheduleContainer}>\r\n            <Text style={styles.sectionSubtitle}>Selectați zilele:</Text>\r\n            <View style={styles.daysSelector}>\r\n              {[\r\n                \"Luni\",\r\n                \"Marți\",\r\n                \"Miercuri\",\r\n                \"Joi\",\r\n                \"Vineri\",\r\n                \"Sâmbătă\",\r\n                \"Duminică\",\r\n              ].map((day, index) => {\r\n                // Verifică dacă există intervale programate pentru acea zi\r\n                const hasSchedule = schedule[index].timeSlots.length > 0;\r\n\r\n                return (\r\n                  <TouchableOpacity\r\n                    key={index}\r\n                    style={[\r\n                      styles.dayButton,\r\n                      hasSchedule && styles.dayButtonActive,\r\n                    ]} // Aplica stilul activ doar pentru zilele cu programare\r\n                    onPress={() => toggleDay(index)}\r\n                  >\r\n                    <Text\r\n                      style={[\r\n                        styles.dayButtonText,\r\n                        hasSchedule && styles.dayButtonTextActive,\r\n                      ]}\r\n                    >\r\n                      {day.charAt(0)} {/* Afișează prima literă a zilei */}\r\n                    </Text>\r\n                  </TouchableOpacity>\r\n                );\r\n              })}\r\n            </View>\r\n\r\n            <Text style={styles.sectionSubtitle}>Programează orele:</Text>\r\n            {scheduledDays.map((dayIndex) => (\r\n              <View key={dayIndex} style={styles.dayScheduleContainer}>\r\n                <Text style={styles.dayTitle}>\r\n                  {\r\n                    [\r\n                      \"Luni\",\r\n                      \"Marți\",\r\n                      \"Miercuri\",\r\n                      \"Joi\",\r\n                      \"Vineri\",\r\n                      \"Sâmbătă\",\r\n                      \"Duminică\",\r\n                    ][dayIndex]\r\n                  }\r\n                </Text>\r\n\r\n                {schedule[dayIndex].timeSlots.map((slot, slotIndex) => (\r\n                  <View key={slotIndex} style={styles.timeSlotContainer}>\r\n                    <TextInput\r\n                      style={styles.timeInput}\r\n                      value={slot.startTime}\r\n                      onChangeText={(text) =>\r\n                        handleTimeChange(dayIndex, slotIndex, \"startTime\", text)\r\n                      }\r\n                      placeholder=\"HH:MM\"\r\n                      keyboardType=\"numeric\"\r\n                      maxLength={5}\r\n                    />\r\n                    <Text style={styles.timeSeparator}>-</Text>\r\n                    <TextInput\r\n                      style={styles.timeInput}\r\n                      value={slot.endTime}\r\n                      onChangeText={(text) =>\r\n                        handleTimeChange(dayIndex, slotIndex, \"endTime\", text)\r\n                      }\r\n                      placeholder=\"HH:MM\"\r\n                      keyboardType=\"numeric\"\r\n                      maxLength={5}\r\n                    />\r\n\r\n                    <TouchableOpacity\r\n                      style={styles.removeTimeButton}\r\n                      onPress={() => removeTimeSlot(dayIndex, slotIndex)}\r\n                    >\r\n                      <Ionicons name=\"close\" size={20} color=\"#e74c3c\" />\r\n                    </TouchableOpacity>\r\n                  </View>\r\n                ))}\r\n\r\n                {schedule[dayIndex].timeSlots.length < 3 && (\r\n                  <TouchableOpacity\r\n                    style={styles.addTimeButton}\r\n                    onPress={() => addTimeSlot(dayIndex)}\r\n                  >\r\n                    <Ionicons name=\"add\" size={20} color=\"#4a90e2\" />\r\n                    <Text style={styles.addTimeText}>Adaugă interval</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n              </View>\r\n            ))}\r\n          </View>\r\n        )}\r\n\r\n        {/* Butonul de save */}\r\n        <View style={styles.saveButtonContainer}>\r\n          <TouchableOpacity style={styles.saveButton} onPress={saveSettings}>\r\n            <Text style={styles.saveButtonText}>Salvează modificările</Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n      </View>\r\n\r\n      {/* Recent Activity */}\r\n      {/* Recent Activity */}\r\n      <View style={styles.activityContainer}>\r\n        <Text style={styles.sectionTitle}>Setări Sistem Irigare</Text>\r\n\r\n        <View style={styles.activityItem}>\r\n          <View style={styles.activityIcon}>\r\n            <Ionicons name=\"settings\" size={20} color=\"#2ecc71\" />\r\n          </View>\r\n          <View style={styles.activityText}>\r\n            <Text style={styles.activityTitle}>Mod pompa</Text>\r\n            <Text style={styles.activityTime}>\r\n              {savedPumpMode === \"manual\"\r\n                ? \"Manual\"\r\n                : savedPumpMode === \"auto\"\r\n                ? \"Automat\"\r\n                : \"Programat\"}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n\r\n        {savedPumpMode === \"auto\" && (\r\n          <View style={styles.activityItem}>\r\n            <View style={styles.activityIcon}>\r\n              <Ionicons name=\"water\" size={20} color=\"#3498db\" />\r\n            </View>\r\n            <View style={styles.activityText}>\r\n              <Text style={styles.activityTitle}>Prag umiditate</Text>\r\n              <Text style={styles.activityTime}>{savedAutoThreshold}%</Text>\r\n            </View>\r\n          </View>\r\n        )}\r\n\r\n        {/* Status actual pompa */}\r\n        <View style={styles.activityItem}>\r\n          <View style={styles.activityIcon}>\r\n            <Ionicons name=\"flash\" size={20} color=\"#f1c40f\" />\r\n          </View>\r\n          <View style={styles.activityText}>\r\n            <Text style={styles.activityTitle}>Status pompa</Text>\r\n            <Text style={styles.activityTime}>\r\n              {pumpStatus === \"on\" ? \"Activă\" : \"Inactivă\"}\r\n            </Text>\r\n          </View>\r\n        </View>\r\n\r\n        {/* Ore programate (dacă e mod programat) */}\r\n        {savedPumpMode === \"scheduled\" && (\r\n          <>\r\n            {savedSchedule.map((day, index) => {\r\n              const dayName = [\r\n                \"Luni\",\r\n                \"Marți\",\r\n                \"Miercuri\",\r\n                \"Joi\",\r\n                \"Vineri\",\r\n                \"Sâmbătă\",\r\n                \"Duminică\",\r\n              ][index];\r\n              const intervals = day.timeSlots\r\n                .filter((slot) => slot.startTime && slot.endTime)\r\n                .map((slot) => `${slot.startTime}-${slot.endTime}`)\r\n                .join(\", \");\r\n\r\n              if (!intervals) return null;\r\n\r\n              return (\r\n                <View key={index} style={styles.activityItem}>\r\n                  <View style={styles.activityIcon}>\r\n                    <Ionicons name=\"calendar\" size={20} color=\"#9b59b6\" />\r\n                  </View>\r\n                  <View style={styles.activityText}>\r\n                    <Text style={styles.activityTitle}>{dayName}</Text>\r\n                    <Text style={styles.activityTime}>{intervals}</Text>\r\n                  </View>\r\n                </View>\r\n              );\r\n            })}\r\n          </>\r\n        )}\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    backgroundColor: \"#f5f5f5\",\r\n  },\r\n  header: {\r\n    padding: 25,\r\n    paddingTop: 40,\r\n    borderBottomLeftRadius: 25,\r\n    borderBottomRightRadius: 25,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 4 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 10,\r\n    elevation: 5,\r\n  },\r\n  headerContent: {\r\n    marginBottom: 15,\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 20,\r\n  },\r\n  userImage: {\r\n    width: 50,\r\n    height: 50,\r\n    borderRadius: 25,\r\n    marginRight: 15,\r\n    borderWidth: 2,\r\n    borderColor: \"rgba(255,255,255,0.3)\",\r\n  },\r\n  welcomeText: {\r\n    fontFamily: \"poppins\",\r\n    color: \"rgba(255,255,255,0.8)\",\r\n    fontSize: 14,\r\n  },\r\n  userName: {\r\n    fontSize: 20,\r\n    color: \"#fff\",\r\n    fontFamily: \"poppins-bold\",\r\n  },\r\n  searchBar: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#fff\",\r\n    paddingHorizontal: 15,\r\n    paddingVertical: 10,\r\n    borderRadius: 12,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 4,\r\n    elevation: 3,\r\n  },\r\n  searchInput: {\r\n    flex: 1,\r\n    fontFamily: \"poppins\",\r\n    fontSize: 16,\r\n    marginLeft: 10,\r\n    color: \"#333\",\r\n  },\r\n  cardsContainer: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    paddingHorizontal: 20,\r\n    marginTop: -30,\r\n    marginBottom: 20,\r\n  },\r\n  card: {\r\n    width: \"48%\",\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 6,\r\n    elevation: 3,\r\n  },\r\n  moistureCard: {\r\n    backgroundColor: \"#fff\",\r\n    borderLeftWidth: 5,\r\n    borderLeftColor: \"#4a90e2\",\r\n  },\r\n  tempCard: {\r\n    backgroundColor: \"#fff\",\r\n    borderLeftWidth: 5,\r\n    borderLeftColor: \"#e74c3c\",\r\n  },\r\n  cardIcon: {\r\n    backgroundColor: \"rgba(74, 144, 226, 0.1)\",\r\n    width: 40,\r\n    height: 40,\r\n    borderRadius: 12,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  cardLabel: {\r\n    fontFamily: \"poppins\",\r\n    color: \"#666\",\r\n    fontSize: 14,\r\n    marginBottom: 5,\r\n  },\r\n  cardValue: {\r\n    fontFamily: \"poppins-bold\",\r\n    fontSize: 24,\r\n    color: \"#333\",\r\n    marginBottom: 5,\r\n  },\r\n  cardStatus: {\r\n    fontFamily: \"poppins\",\r\n    fontSize: 14,\r\n    color: \"#666\",\r\n  },\r\n  pumpContainer: {\r\n    backgroundColor: \"#fff\",\r\n    marginHorizontal: 20,\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    marginBottom: 20,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 6,\r\n    elevation: 3,\r\n  },\r\n  sectionTitle: {\r\n    fontFamily: \"poppins-bold\",\r\n    fontSize: 18,\r\n    color: \"#333\",\r\n    marginBottom: 15,\r\n  },\r\n  pumpStatusContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"space-between\",\r\n  },\r\n  pumpStatusIndicator: {\r\n    paddingVertical: 8,\r\n    paddingHorizontal: 15,\r\n    borderRadius: 20,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  pumpOn: {\r\n    backgroundColor: \"rgba(46, 204, 113, 0.2)\",\r\n  },\r\n  pumpOff: {\r\n    backgroundColor: \"rgba(231, 76, 60, 0.2)\",\r\n  },\r\n  pumpStatusText: {\r\n    fontFamily: \"poppins-bold\",\r\n    fontSize: 14,\r\n    color: \"#333\",\r\n  },\r\n  pumpButtons: {\r\n    flexDirection: \"row\",\r\n    gap: 10,\r\n  },\r\n  pumpButton: {\r\n    paddingVertical: 10,\r\n    paddingHorizontal: 20,\r\n    borderRadius: 8,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n  },\r\n  pumpOnButton: {\r\n    backgroundColor: Colors.DARKGREEN,\r\n  },\r\n  pumpOffButton: {\r\n    backgroundColor: \"#e74c3c\",\r\n  },\r\n  buttonText: {\r\n    fontFamily: \"poppins-bold\",\r\n    color: \"#fff\",\r\n    fontSize: 14,\r\n  },\r\n  activityContainer: {\r\n    backgroundColor: \"#fff\",\r\n    marginHorizontal: 20,\r\n    padding: 20,\r\n    borderRadius: 15,\r\n    marginBottom: 20,\r\n    shadowColor: \"#000\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.1,\r\n    shadowRadius: 6,\r\n    elevation: 3,\r\n  },\r\n  activityItem: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    paddingVertical: 12,\r\n    borderBottomWidth: 1,\r\n    borderBottomColor: \"#eee\",\r\n  },\r\n  activityIcon: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    backgroundColor: \"rgba(52, 152, 219, 0.1)\",\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    marginRight: 15,\r\n  },\r\n  activityText: {\r\n    flex: 1,\r\n  },\r\n  activityTitle: {\r\n    fontFamily: \"poppins\",\r\n    fontSize: 15,\r\n    color: \"#333\",\r\n    marginBottom: 2,\r\n  },\r\n  activityTime: {\r\n    fontFamily: \"poppins\",\r\n    fontSize: 12,\r\n    color: \"#888\",\r\n  },\r\n  modeSelector: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n    backgroundColor: \"#f5f5f5\",\r\n    borderRadius: 10,\r\n    padding: 5,\r\n  },\r\n  modeButton: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    paddingVertical: 10,\r\n    borderRadius: 8,\r\n    flexDirection: \"row\",\r\n    justifyContent: \"center\",\r\n  },\r\n  modeButtonActive: {\r\n    backgroundColor: \"#4a90e2\",\r\n  },\r\n  modeButtonText: {\r\n    marginLeft: 5,\r\n    color: \"#4a90e2\",\r\n    fontWeight: \"500\",\r\n  },\r\n  modeButtonTextActive: {\r\n    color: \"#fff\",\r\n  },\r\n  autoModeContainer: {\r\n    backgroundColor: \"#f9f9f9\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n  },\r\n  autoModeText: {\r\n    color: \"#555\",\r\n    marginBottom: 15,\r\n    textAlign: \"center\",\r\n  },\r\n  thresholdControl: {\r\n    marginTop: 10,\r\n  },\r\n  thresholdLabel: {\r\n    color: \"#333\",\r\n    marginBottom: 5,\r\n  },\r\n  thresholdValue: {\r\n    textAlign: \"center\",\r\n    color: \"#4a90e2\",\r\n    fontWeight: \"bold\",\r\n    marginTop: 5,\r\n  },\r\n\r\n  daysSelector: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 15,\r\n  },\r\n  dayButton: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#eee\",\r\n  },\r\n  dayButtonActive: {\r\n    backgroundColor: \"#4a90e2\",\r\n  },\r\n  dayButtonText: {\r\n    color: \"#555\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  dayButtonTextActive: {\r\n    color: \"#fff\",\r\n  },\r\n  timeSlotsContainer: {\r\n    marginTop: 10,\r\n  },\r\n  timeSlot: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  removeTimeButton: {\r\n    marginLeft: 10,\r\n  },\r\n  addTimeButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 10,\r\n    borderWidth: 1,\r\n    borderColor: \"#4a90e2\",\r\n    borderRadius: 5,\r\n    marginTop: 5,\r\n  },\r\n  addTimeText: {\r\n    color: \"#4a90e2\",\r\n    marginLeft: 5,\r\n  },\r\n  timeDisplay: {\r\n    padding: 10,\r\n    backgroundColor: \"#f0f0f0\",\r\n    borderRadius: 10,\r\n    marginRight: 10,\r\n  },\r\n  timeText: {\r\n    fontSize: 16,\r\n    color: \"#333\",\r\n  },\r\n  scheduleContainer: {\r\n    backgroundColor: \"#f9f9f9\",\r\n    borderRadius: 10,\r\n    padding: 15,\r\n    marginTop: 10,\r\n  },\r\n  sectionSubtitle: {\r\n    fontSize: 14,\r\n    fontWeight: \"600\",\r\n    color: \"#555\",\r\n    marginBottom: 10,\r\n  },\r\n  daysSelector: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\",\r\n    marginBottom: 20,\r\n  },\r\n  dayButton: {\r\n    width: 36,\r\n    height: 36,\r\n    borderRadius: 18,\r\n    justifyContent: \"center\",\r\n    alignItems: \"center\",\r\n    backgroundColor: \"#eee\",\r\n  },\r\n  dayButtonActive: {\r\n    backgroundColor: \"#4a90e2\",\r\n  },\r\n  dayButtonText: {\r\n    color: \"#555\",\r\n    fontWeight: \"bold\",\r\n  },\r\n  dayButtonTextActive: {\r\n    color: \"#fff\",\r\n  },\r\n  dayScheduleContainer: {\r\n    marginBottom: 15,\r\n    padding: 10,\r\n    backgroundColor: \"#fff\",\r\n    borderRadius: 8,\r\n    borderWidth: 1,\r\n    borderColor: \"#eee\",\r\n  },\r\n  dayTitle: {\r\n    fontWeight: \"bold\",\r\n    marginBottom: 10,\r\n    color: \"#333\",\r\n  },\r\n  timeSlotContainer: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    marginBottom: 10,\r\n  },\r\n  timeInput: {\r\n    borderWidth: 1,\r\n    borderColor: \"#ddd\",\r\n    borderRadius: 5,\r\n    padding: 8,\r\n    width: 70,\r\n    textAlign: \"center\",\r\n  },\r\n  timeSeparator: {\r\n    marginHorizontal: 5,\r\n    color: \"#555\",\r\n  },\r\n  removeTimeButton: {\r\n    marginLeft: 10,\r\n  },\r\n  addTimeButton: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n    padding: 8,\r\n    borderWidth: 1,\r\n    borderColor: \"#4a90e2\",\r\n    borderRadius: 5,\r\n    marginTop: 5,\r\n  },\r\n  addTimeText: {\r\n    color: \"#4a90e2\",\r\n    marginLeft: 5,\r\n    fontSize: 14,\r\n  },\r\n  saveButtonContainer: {\r\n    marginVertical: 25,\r\n    alignItems: \"center\",\r\n  },\r\n  saveButton: {\r\n    width: \"90%\",\r\n    backgroundColor: \"#0072ff\", // Solid color instead of gradient\r\n    borderRadius: 30,\r\n    paddingVertical: 16,\r\n    paddingHorizontal: 24,\r\n    justifyContent: \"center\", // Center vertically\r\n    alignItems: \"center\", // Center horizontally\r\n    elevation: 2, // More subtle shadow\r\n    shadowColor: \"#0072ff\",\r\n    shadowOffset: { width: 0, height: 2 },\r\n    shadowOpacity: 0.2,\r\n    shadowRadius: 4,\r\n  },\r\n  saveButtonText: {\r\n    color: \"white\",\r\n    fontSize: 16,\r\n    fontWeight: \"600\",\r\n    letterSpacing: 0.3, // Slightly tighter letter spacing\r\n    textAlign: \"center\", // Ensure text is centered\r\n    width: \"100%\", // Take full width to ensure proper centering\r\n  },\r\n  headerContent: {\r\n    flexDirection: \"row\",\r\n    justifyContent: \"space-between\", // Aliniază elementele pe laturi opuse\r\n    alignItems: \"center\", // Centrează vertical\r\n    width: \"100%\",\r\n    paddingHorizontal: 16, // Spațiu lateral\r\n  },\r\n  userInfo: {\r\n    flexDirection: \"row\",\r\n    alignItems: \"center\",\r\n  },\r\n  logo: {\r\n    width: 90, // Ajustează dimensiunile\r\n    height: 90,\r\n    resizeMode: \"contain\", // Păstrează proporțiile\r\n  },\r\n  refreshButton: {\r\n    marginTop: 20,\r\n    padding: 10,\r\n    backgroundColor: \"#007BFF\",\r\n    borderRadius: 5,\r\n    alignItems: \"center\",\r\n  },\r\n  refreshText: {\r\n    color: \"#fff\",\r\n    fontSize: 16,\r\n  },\r\n});\r\n"
        }
    ]
}