{
    "sourceFile": "app/(auth)/_layout.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 1,
            "patches": [
                {
                    "date": 1745760995555,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1745762315589,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -4,9 +4,9 @@\n import { useAuth } from '../../functions';  // Asigură-te că folosești corect importul\r\n import Feather from '@expo/vector-icons/Feather';\r\n import { LinearGradient } from 'expo-linear-gradient';\r\n import MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\r\n-import { Colors } from '../components/constants/Colors';\r\n+import { Colors } from '../constants/Colors';\r\n \r\n // Logout button component\r\n export const LogoutButton = () => {\r\n   const { signOut } = useAuth();\r\n"
                }
            ],
            "date": 1745760995555,
            "name": "Commit-0",
            "content": "import { Tabs } from 'expo-router';\r\nimport { Ionicons } from '@expo/vector-icons';\r\nimport { Pressable } from 'react-native';\r\nimport { useAuth } from '../../functions';  // Asigură-te că folosești corect importul\r\nimport Feather from '@expo/vector-icons/Feather';\r\nimport { LinearGradient } from 'expo-linear-gradient';\r\nimport MaterialCommunityIcons from '@expo/vector-icons/MaterialCommunityIcons';\r\nimport { Colors } from '../components/constants/Colors';\r\n\r\n// Logout button component\r\nexport const LogoutButton = () => {\r\n  const { signOut } = useAuth();\r\n\r\n  const doLogout = () => {\r\n    signOut();\r\n  };\r\n\r\n  return (\r\n    <Pressable onPress={doLogout} style={{ marginRight: 10 }}>\r\n      <Ionicons name=\"log-out-outline\" size={24} color={'#fff'} />\r\n    </Pressable>\r\n  );\r\n};\r\n\r\nconst TabsPage = () => {\r\n  const { userLoggedIn } = useAuth(); // Folosește userLoggedIn pentru verificarea statusului\r\n\r\n  return (\r\n    <Tabs\r\n      screenOptions={{\r\n        tabBarStyle: {\r\n          position: 'absolute',\r\n          bottom: 0,\r\n          left: 0,\r\n          right: 0,\r\n          height: 70,\r\n          borderTopWidth: 0,\r\n          backgroundColor: 'transparent',\r\n          elevation: 0, \r\n          shadowOpacity: 0, \r\n        },\r\n        tabBarBackground: () => (\r\n          <LinearGradient\r\n            colors={['rgba(255, 255, 255, 0)', 'rgba(255, 255, 255, 0.95)']}\r\n            start={{ x: 0, y: 0.2 }}\r\n            end={{ x: 0, y: 1 }}\r\n            style={{\r\n              height: '100%',\r\n              borderTopLeftRadius: 0,\r\n              borderTopRightRadius: 0,\r\n            }}\r\n          />\r\n        ),\r\n        tabBarItemStyle: {\r\n          paddingVertical: 10,\r\n        },\r\n        tabBarActiveTintColor: '#000',\r\n        tabBarInactiveTintColor: 'rgba(45, 45, 45, 0.56)',\r\n        tabBarShowLabel: false,\r\n        headerShown: false,\r\n      }}\r\n    >\r\n      <Tabs.Screen\r\n        name=\"home\"\r\n        options={{\r\n          headerTitle: 'Home',\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"home-outline\" size={size} color={color} />,\r\n          tabBarLabel: 'Home',\r\n        }}\r\n        redirect={!userLoggedIn} // Asigură-te că redirecționezi corect\r\n      />\r\n      <Tabs.Screen\r\n        name=\"weather\"\r\n        options={{\r\n          headerTitle: 'weather',\r\n          tabBarIcon: ({ color, size }) => <Feather name=\"sun\" size={24} color={color} />,\r\n          tabBarLabel: 'weather',\r\n        }}\r\n        redirect={!userLoggedIn} // Corect redirecționarea\r\n      />\r\n      <Tabs.Screen\r\n        name=\"notifications\"\r\n        options={{\r\n          headerTitle: 'notifications',\r\n          tabBarIcon: ({ color, size }) => <MaterialCommunityIcons name=\"notification-clear-all\" size={24} color={color} />,\r\n          tabBarLabel: 'notifications',\r\n        }}\r\n        redirect={!userLoggedIn} // Redirecționează corect\r\n      />\r\n      <Tabs.Screen\r\n        name=\"profile\"\r\n        options={{\r\n          headerTitle: 'My Profile',\r\n          tabBarIcon: ({ color, size }) => <Ionicons name=\"person-outline\" size={size} color={color} />,\r\n          tabBarLabel: 'My Profile',\r\n        }}\r\n        redirect={!userLoggedIn} // Redirecționează corect\r\n      />\r\n    </Tabs>\r\n  );\r\n};\r\n\r\nexport default TabsPage;"
        }
    ]
}